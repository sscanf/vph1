ANSI-C/cC++ Compiler for HC08 V-5.0.17, Apr 22 2003

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : CR161.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : CRC16
   13:  **
   14:  **     Version   : Bean 01.003, Driver 01.50, CPU db: 2.89.000
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler
   17:  **
   18:  **     Date/Time : 22/7/05, 10:49
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "CRC16" implements a CRC16 algorithm. You can use
   23:  **         CCITT, ITU-T or user define polynom..
   24:  **
   25:  **     Settings  :
   26:  **
   27:  **         Endian  : little
   28:  **         Polynom : CCITT
   29:  **
   30:  **     Contents  :
   31:  **
   32:  **         Init         - void CR161_Init(word *crc);
   33:  **         Update       - void CR161_Update(word *crc,byte *data,word len);
   34:  **         Done         - void CR161_Done(word *crc);
   35:  **         EncodeBuffer - void CR161_EncodeBuffer(byte *buffer,word len,word *crc);
   36:  **
   37:  **
   38:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   39:  **
   40:  **     UNIS, spol. s r.o.
   41:  **     Jundrovska 33
   42:  **     624 00 Brno
   43:  **     Czech Republic
   44:  **
   45:  **     http      : www.processorexpert.com
   46:  **     mail      : info@processorexpert.com
   47:  **
   48:  ** ###################################################################
   49:  */
   50:  
   51:  
   52:  /* MODULE CR161. */
   53:  
   54:  #include "CR161.h"
   55:  #include "CR161_Tab.h"
   56:  
   57:  /*
   58:  ** ===================================================================
   59:  **     Method      :  CR161_EncodeBuffer (bean CRC16)
   60:  **
   61:  **     Description :
   62:  **         Enumeration crc for one block.
   63:  **     Parameters  :
   64:  **         NAME            - DESCRIPTION
   65:  **       * buffer          - Pointer to buffer
   66:  **         len             - Length
   67:  **       * crc             - Pointer to crc
   68:  **     Returns     : Nothing
   69:  ** ===================================================================
   70:  */
   71:  void CR161_EncodeBuffer(byte *buffer,word len,word *crc)
   72:  {

Function: CR161_EncodeBuffer
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\CR161.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\CR161.C.o" -Qvtpfar -WmsgSd1106

   73:  /*
   74:   #####  Here will be code here if you have a full registered version  #####
   75:  */
   76:   
   77:  }
  0000 81               RTS   
   78:  
   79:  /*
   80:  ** ===================================================================
   81:  **     Method      :  CR161_Done (bean CRC16)
   82:  **
   83:  **     Description :
   84:  **         This method returns final value of CRC. This value is
   85:  **         calculated from status variable.
   86:  **     Parameters  :
   87:  **         NAME            - DESCRIPTION
   88:  **       * crc             - Pointer to crc
   89:  **     Returns     : Nothing
   90:  ** ===================================================================
   91:  */
   92:  /*
   93:  void CR161_Done(word *crc)
   94:  
   95:  **      This method is implemented as macro      **
   96:  */
   97:  
   98:  /*
   99:  ** ===================================================================
  100:  **     Method      :  CR161_Update (bean CRC16)
  101:  **
  102:  **     Description :
  103:  **         This method calculates new status and return it as
  104:  **         parameter (variable crc).
  105:  **     Parameters  :
  106:  **         NAME            - DESCRIPTION
  107:  **       * crc             - Pointer to crc
  108:  **       * data            - Pointer to data
  109:  **         len             - Length
  110:  **     Returns     : Nothing
  111:  ** ===================================================================
  112:  */
  113:  void CR161_Update(word *crc,byte *data,word len)
  114:  {

Function: CR161_Update
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\CR161.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\CR161.C.o" -Qvtpfar -WmsgSd1106

  115:  /*
  116:   #####  Here will be code here if you have a full registered version  #####
  117:  */
  118:   
  119:  }
  0000 81               RTS   
  120:  
  121:  /*
  122:  ** ===================================================================
  123:  **     Method      :  CR161_Init (bean CRC16)
  124:  **
  125:  **     Description :
  126:  **         Initialize CRC (Sets new value to status variable).
  127:  **     Parameters  :
  128:  **         NAME            - DESCRIPTION
  129:  **       * crc             - Pointer to crc
  130:  **     Returns     : Nothing
  131:  ** ===================================================================
  132:  */
  133:  void CR161_Init(word *crc)
  134:  {

Function: CR161_Init
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\CR161.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\CR161.C.o" -Qvtpfar -WmsgSd1106

  135:  /*
  136:   #####  Here will be code here if you have a full registered version  #####
  137:  */
  138:   
  139:  }
  0000 81               RTS   
  140:  
  141:  
  142:  /* END CR161. */
  143:  
  144:  /*
  145:  ** ###################################################################
  146:  **
  147:  **     This file was created by UNIS Processor Expert 03.23 for 
  148:  **     the Motorola HC08 series of microcontrollers.
  149:  **
  150:  ** ###################################################################
  151:  */
  152:  
