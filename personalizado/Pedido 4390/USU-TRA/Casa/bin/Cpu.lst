ANSI-C/cC++ Compiler for HC08 V-5.0.17, Apr 22 2003

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : Cpu.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : MC68HC908GP32_44
   13:  **
   14:  **     Version   : Bean 01.065, Driver 01.17, CPU db: 2.89.000
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler
   17:  **
   18:  **     Date/Time : 26/7/05, 16:13
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "MC68HC908GP32_44" implements properties, methods,
   23:  **         and events of the CPU.
   24:  **
   25:  **     Settings  :
   26:  **
   27:  **         Clock setting
   28:  **             External clock      : 0.032768 MHz
   29:  **             CPU mode selection  : User mode
   30:  **             Initialization interrupt priority : 0
   31:  **             LVI module          : no
   32:  **
   33:  **         Speed modes
   34:  **             High speed clock    : Main clock frequency / 1
   35:  **             Internal bus clock  : 2.4576 MHz
   36:  **             Low speed mode      : Disabled
   37:  **             Slow speed mode     : Disabled
   38:  **
   39:  **     Contents  :
   40:  **
   41:  **         GetSpeedMode - byte Cpu_GetSpeedMode(void);
   42:  **         EnableInt    - void Cpu_EnableInt(void);
   43:  **         DisableInt   - void Cpu_DisableInt(void);
   44:  **
   45:  **
   46:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   47:  **
   48:  **     UNIS, spol. s r.o.
   49:  **     Jundrovska 33
   50:  **     624 00 Brno
   51:  **     Czech Republic
   52:  **
   53:  **     http      : www.processorexpert.com
   54:  **     mail      : info@processorexpert.com
   55:  **
   56:  ** ###################################################################
   57:  */
   58:  
   59:  /* MODULE Cpu. */
   60:  
   61:  #include "Terminal.h"
   62:  #include "IRQ.h"
   63:  #include "TIMER.h"
   64:  #include "LEDS_IN.h"
   65:  #include "APERTURA.h"
   66:  #include "PE_Types.h"
   67:  #include "PE_Error.h"
   68:  #include "PE_Const.h"
   69:  #include "IO_Map.h"
   70:  #include "Events.h"
   71:  #include "Cpu.h"
   72:  
   73:  #define CGM_DELAY  255
   74:  
   75:  
   76:  /* Global variables */
   77:  volatile byte CCR_reg;                 /* Current CCR register */
   78:  byte CpuMode = HIGH_SPEED;             /* Current speed mode */
   79:  
   80:  /*Definition of global shadow variables*/
   81:  byte Shadow_PTC;
   82:  
   83:  
   84:  /*
   85:  ** ===================================================================
   86:  **     Method      :  Cpu_Interrupt (bean MC68HC908GP32_44)
   87:  **
   88:  **     Description :
   89:  **         This method is internal. It is used by Processor Expert
   90:  **         only.
   91:  ** ===================================================================
   92:  */
   93:  __interrupt void Cpu_Interrupt(void)
   94:  {

Function: Cpu_Interrupt
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o" -Qvtpfar -WmsgSd1106

   95:  }
  0000 80               RTI   
   96:  
   97:  /*
   98:  ** ===================================================================
   99:  **     Method      :  Cpu_SWIInterrupt (bean MC68HC908GP32_44)
  100:  **
  101:  **     Description :
  102:  **         This method is internal. It is used by Processor Expert
  103:  **         only.
  104:  ** ===================================================================
  105:  */
  106:  __interrupt void Cpu_SWIInterrupt(void)
  107:  {

Function: Cpu_SWIInterrupt
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o" -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  108:    Cpu_OnSwINT();                       /* Invoke user event */
  0001 cd0000           JSR   Cpu_OnSwINT
  109:  }
  0004 8a               PULH  
  0005 80               RTI   
  110:  
  111:  /*
  112:  ** ===================================================================
  113:  **     Method      :  Cpu_DisableInt (bean MC68HC908GP32_44)
  114:  **
  115:  **     Description :
  116:  **         Disable maskable interrupts
  117:  **     Parameters  : None
  118:  **     Returns     : Nothing
  119:  ** ===================================================================
  120:  */
  121:  /*
  122:  void Cpu_DisableInt(void)
  123:  
  124:  **      This method is implemented as macro in the header module. **
  125:  */
  126:  
  127:  /*
  128:  ** ===================================================================
  129:  **     Method      :  Cpu_EnableInt (bean MC68HC908GP32_44)
  130:  **
  131:  **     Description :
  132:  **         Enable maskable interrupts
  133:  **     Parameters  : None
  134:  **     Returns     : Nothing
  135:  ** ===================================================================
  136:  */
  137:  /*
  138:  void Cpu_EnableInt(void)
  139:  
  140:  **      This method is implemented as macro in the header module. **
  141:  */
  142:  
  143:  /*
  144:  ** ===================================================================
  145:  **     Method      :  Cpu_GetSpeedMode (bean MC68HC908GP32_44)
  146:  **
  147:  **     Description :
  148:  **         Get current speed mode
  149:  **     Parameters  : None
  150:  **     Returns     :
  151:  **         ---             - Speed mode (HIGH_SPEED, LOW_SPEED,
  152:  **                           SLOW_SPEED)
  153:  ** ===================================================================
  154:  */
  155:  byte Cpu_GetSpeedMode(void)
  156:  {

Function: Cpu_GetSpeedMode
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o" -Qvtpfar -WmsgSd1106

  157:    return CpuMode;                      /* Result the actual cpu mode */
  0000 c60000           LDA   CpuMode
  158:  }
  0003 81               RTS   
  159:  
  160:  
  161:  
  162:  /*
  163:  ** ===================================================================
  164:  **     Method      :  _EntryPoint (bean MC68HC908GP32_44)
  165:  **
  166:  **     Description :
  167:  **         This method is internal. It is used by Processor Expert
  168:  **         only.
  169:  ** ===================================================================
  170:  */
  171:  extern void _Startup(void);            /* Forward declaration of external startup function declared in file Start12.c */
  172:  #pragma NO_FRAME
  173:  #pragma NO_EXIT
  174:  void _EntryPoint(void)
  175:  {

Function: _EntryPoint
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o" -Qvtpfar -WmsgSd1106

  176:    /*** ### MC68HC908GP32_44 "Cpu" init code ... ***/
  177:    /*** PE initialization code after reset ***/
  178:    /* System clock initialization */
  179:    /* CONFIG1: COPRS=0,LVISTOP=0,LVIRSTD=0,LVIPWRD=1,LVI5OR3=0,SSREC=0,STOP=0,COPD=1 */
  180:    CONFIG1 = 17;                        /* Set the CONFIG1 register */
  0000 6e1100           MOV   #17,_CONFIG1
  181:    /* CONFIG2: ??=0,??=0,??=0,??=0,??=0,??=0,OSCSTOPENB=0,SCIBDSRC=1 */
  182:    CONFIG2 = 1;                         /* Set the CONFIG2 register */
  0003 6e0100           MOV   #1,_CONFIG2
  183:    PCTL_BCS = 0;                        /* Select clock source from XTAL */
  0006 1900             BCLR  4,_PCTL
  184:    PCTL_PLLON = 0;                      /* Disable the PLL */
  0008 1b00             BCLR  5,_PCTL
  185:    PMS = 300;                           /* Set the multiplier */
  000a 45012c           LDHX  #300
  000d 3500             STHX  _PMS
  186:    PMRS = 128;                          /* Set the range select */
  000f 6e8000           MOV   #-128,_PMRS
  187:    PCTL = 0;
  0012 3f00             CLR   _PCTL
  188:    PCTL_VPR = 1;
  0014 b600             LDA   _PCTL
  0016 a4fc             AND   #-4
  0018 aa01             ORA   #1
  001a b700             STA   _PCTL
  189:    PBWC = 128;                          /* Select the operating modes */
  001c 6e8000           MOV   #-128,_PBWC
  190:    PCTL_PLLON = 1;                      /* Enable the PLL */
  001f 1a00             BSET  5,_PCTL
  0021          L21:    
  191:    while(!PBWC_LOCK);                   /* Wait */
  0021 0d00fd           BRCLR 6,_PBWC,L21 ;abs = 0021
  192:    PCTL_BCS = 1;                        /* Select clock source from PLL */
  0024 1800             BSET  4,_PCTL
  193:    __asm("nop");
  0026 9d               NOP   
  194:    __asm("nop");
  0027 9d               NOP   
  195:    /*** End of PE initialization code after reset ***/
  196:  
  197:    __asm   jmp _Startup ;               /* Jump to C startup code */
  0028 cc0000           JMP   _Startup
  198:  
  199:  }
  200:  
  201:  /*
  202:  ** ===================================================================
  203:  **     Method      :  PE_low_level_init (bean MC68HC908GP32_44)
  204:  **
  205:  **     Description :
  206:  **         This method is internal. It is used by Processor Expert
  207:  **         only.
  208:  ** ===================================================================
  209:  */
  210:  void PE_low_level_init(void)
  211:  {

Function: PE_low_level_init
Source  : Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\cmd;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\Code;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Comun;*Z:\vph1\Personalizado\Pedido 4390\USU-TRA;Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"OBJPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Env"TEXTPATH=Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\bin" -Lasm=%n.lst -ObjN="Z:\vph1\Personalizado\Pedido 4390\USU-TRA\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o" -Qvtpfar -WmsgSd1106

  212:    /* Common initialization of the CPU registers */
  213:  /* DDRB: DDRB5=0,DDRB4=0 */
  214:    output( DDRB, input( DDRB ) & ~48 );
  0000 b600             LDA   _DDRB
  0002 a4cf             AND   #-49
  0004 b700             STA   _DDRB
  215:  /* PTCPUE: PTCPUE5=0,PTCPUE4=0 */
  216:    output( PTCPUE, input( PTCPUE ) & ~48 );
  0006 b600             LDA   _PTCPUE
  0008 a4cf             AND   #-49
  000a b700             STA   _PTCPUE
  217:  /* PTC: PTC5=0,PTC4=0 */
  218:    output( PTC, input( PTC ) & ~48 );
  000c b600             LDA   _PTC
  000e a4cf             AND   #-49
  0010 b700             STA   _PTC
  219:  /* DDRC: DDRC5=0,DDRC4=0 */
  220:    output( DDRC, input( DDRC ) & ~48 );
  0012 b600             LDA   _DDRC
  0014 a4cf             AND   #-49
  0016 b700             STA   _DDRC
  221:    /* ### MC68HC908GP32_44 "Cpu" init code ... */
  222:    /* ### Asynchro serial "Terminal" init code ... */
  223:    /* PTE: PTE0=1 */
  224:    PTE |= 1;
  0018 1000             BSET  0,_PTE
  225:    /* DDRE: DDRE0=1 */
  226:    DDRE |= 1;
  001a 1000             BSET  0,_DDRE
  227:    Terminal_Init();
  001c cd0000           JSR   Terminal_Init
  228:    /* ### External interrupt "IRQ" init code ... */
  229:    INTSCR_MODE = 1;                     /* Set low level and falling edge */
  001f 1000             BSET  0,_INTSCR
  230:    INTSCR_IMASK = 1;
  0021 1200             BSET  1,_INTSCR
  231:    INTSCR_ACK = 1;
  0023 1400             BSET  2,_INTSCR
  232:    INTSCR_IMASK = 0;
  0025 1300             BCLR  1,_INTSCR
  233:    /* ### TimerInt "TIMER" init code ... */
  234:    TIMER_Init();
  0027 cd0000           JSR   TIMER_Init
  235:    /* ### BitsIO "APERTURA" init code ... */
  236:    Shadow_PTC = Shadow_PTC & ~48 | 0;   /* Initialize shadow variable */
  002a 450000           LDHX  @Shadow_PTC
  002d f6               LDA   ,X
  002e a4cf             AND   #-49
  0030 f7               STA   ,X
  237:    __DI();                              /* Disable interrupts */
  0031 9b               SEI   
  238:  }
  0032 81               RTS   
  239:  
  240:  /* END Cpu. */
  241:  
  242:  /*
  243:  ** ###################################################################
  244:  **
  245:  **     This file was created by UNIS Processor Expert 03.23 for 
  246:  **     the Motorola HC08 series of microcontrollers.
  247:  **
  248:  ** ###################################################################
  249:  */
  250:  
