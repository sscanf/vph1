/*
** ###################################################################
**
**     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**
**     Filename  : IO_Map.H
**
**     Project   : vph1
** 
**     Processor : MC68HC908GP32CFB
**
**     Beantype  : IO_Map
**
**     Version   : Driver 01.02
**
**     Compiler  : Metrowerks HC08 C Compiler V-5.0.13
**
**     Date/Time : 11/2/martes, 12:14
**
**     Abstract  :
**
**         This bean "IO_Map" implements an IO devices mapping.
**
**     Settings  :
**
**
**
**     Contents  :
**
**         No public methods
**
**
**     (c) Copyright UNIS, spol. s r.o. 1997-2002
**
**     UNIS, spol. s r.o.
**     Jundrovska 33
**     624 00 Brno
**     Czech Republic
**
**     http      : www.processorexpert.com
**     mail      : info@processorexpert.com
**
** ###################################################################
*/
#include "PE_Types.h"

#pragma MESSAGE DISABLE C1106 /* WARNING C1106: Non-standard bitfield type */
/* Based on CPU DB MC68HC908GP32_44, version 2.82.031 */
#ifndef _MC68HC908GP32_44_H
#define _MC68HC908GP32_44_H

/*** PTA - Port A Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte PTA0    :1;           /* Port A Data Bit 0, Keyboard Input */
    byte PTA1    :1;           /* Port A Data Bit 1, Keyboard Input */
    byte PTA2    :1;           /* Port A Data Bit 2, Keyboard Input */
    byte PTA3    :1;           /* Port A Data Bit 3, Keyboard Input */
    byte PTA4    :1;           /* Port A Data Bit 4, Keyboard Input */
    byte PTA5    :1;           /* Port A Data Bit 5, Keyboard Input */
    byte PTA6    :1;           /* Port A Data Bit 6, Keyboard Input */
    byte PTA7    :1;           /* Port A Data Bit 7, Keyboard Input */
  } Bits;
  struct {
    byte PTA     :8;
  } MergedBits;
} PTASTR;
extern volatile PTASTR _PTA @0x00000000;
#define PTA _PTA.Byte
#define PTA_PTA0 _PTA.Bits.PTA0
#define PTA_PTA1 _PTA.Bits.PTA1
#define PTA_PTA2 _PTA.Bits.PTA2
#define PTA_PTA3 _PTA.Bits.PTA3
#define PTA_PTA4 _PTA.Bits.PTA4
#define PTA_PTA5 _PTA.Bits.PTA5
#define PTA_PTA6 _PTA.Bits.PTA6
#define PTA_PTA7 _PTA.Bits.PTA7
#define PTA_PTA _PTA.MergedBits.PTA

/*** PTB - Port B Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte PTB0    :1;           /* Port B Data Bit 0, ADC Channel 0 */
    byte PTB1    :1;           /* Port B Data Bit 1, ADC Channel 1 */
    byte PTB2    :1;           /* Port B Data Bit 2, ADC Channel 2 */
    byte PTB3    :1;           /* Port B Data Bit 3, ADC Channel 3 */
    byte PTB4    :1;           /* Port B Data Bit 4, ADC Channel 4 */
    byte PTB5    :1;           /* Port B Data Bit 5, ADC Channel 5 */
    byte PTB6    :1;           /* Port B Data Bit 6, ADC Channel 6 */
    byte PTB7    :1;           /* Port B Data Bit 7, ADC Channel 7 */
  } Bits;
  struct {
    byte PTB     :8;
  } MergedBits;
} PTBSTR;
extern volatile PTBSTR _PTB @0x00000001;
#define PTB _PTB.Byte
#define PTB_PTB0 _PTB.Bits.PTB0
#define PTB_PTB1 _PTB.Bits.PTB1
#define PTB_PTB2 _PTB.Bits.PTB2
#define PTB_PTB3 _PTB.Bits.PTB3
#define PTB_PTB4 _PTB.Bits.PTB4
#define PTB_PTB5 _PTB.Bits.PTB5
#define PTB_PTB6 _PTB.Bits.PTB6
#define PTB_PTB7 _PTB.Bits.PTB7
#define PTB_PTB _PTB.MergedBits.PTB

/*** PTC - Port C Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte PTC0    :1;           /* Port C Data Bit 0 */
    byte PTC1    :1;           /* Port C Data Bit 1 */
    byte PTC2    :1;           /* Port C Data Bit 2 */
    byte PTC3    :1;           /* Port C Data Bit 3 */
    byte PTC4    :1;           /* Port C Data Bit 4 */
    byte PTC5    :1;           /* Port C Data Bit 5 */
    byte PTC6    :1;           /* Port C Data Bit 6 */
    byte         :1; 
  } Bits;
  struct {
    byte PTC     :7;
    byte         :1;
  } MergedBits;
} PTCSTR;
extern volatile PTCSTR _PTC @0x00000002;
#define PTC _PTC.Byte
#define PTC_PTC0 _PTC.Bits.PTC0
#define PTC_PTC1 _PTC.Bits.PTC1
#define PTC_PTC2 _PTC.Bits.PTC2
#define PTC_PTC3 _PTC.Bits.PTC3
#define PTC_PTC4 _PTC.Bits.PTC4
#define PTC_PTC5 _PTC.Bits.PTC5
#define PTC_PTC6 _PTC.Bits.PTC6
#define PTC_PTC _PTC.MergedBits.PTC

/*** PTD - Port D Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte PTD0    :1;           /* Port D Data Bit 0, Slave Select */
    byte PTD1    :1;           /* Port D Data Bit 1, Master In/Slave Out */
    byte PTD2    :1;           /* Port D Data Bit 2, Master Out/Slave In */
    byte PTD3    :1;           /* Port D Data Bit 3, SPI Serial Clock */
    byte PTD4    :1;           /* Port D Data Bit 4, Timer 1 Channel I/O Bit */
    byte PTD5    :1;           /* Port D Data Bit 5, Timer 1 Channel I/O Bit */
    byte PTD6    :1;           /* Port D Data Bit 6, Timer 2 Channel I/O Bit */
    byte PTD7    :1;           /* Port D Data Bit 7, Timer 2 Channel I/O Bit */
  } Bits;
  struct {
    byte PTD     :8;
  } MergedBits;
} PTDSTR;
extern volatile PTDSTR _PTD @0x00000003;
#define PTD _PTD.Byte
#define PTD_PTD0 _PTD.Bits.PTD0
#define PTD_PTD1 _PTD.Bits.PTD1
#define PTD_PTD2 _PTD.Bits.PTD2
#define PTD_PTD3 _PTD.Bits.PTD3
#define PTD_PTD4 _PTD.Bits.PTD4
#define PTD_PTD5 _PTD.Bits.PTD5
#define PTD_PTD6 _PTD.Bits.PTD6
#define PTD_PTD7 _PTD.Bits.PTD7
#define PTD_PTD _PTD.MergedBits.PTD

/*** DDRA - Data Direction Register A ***/
typedef union {
  byte Byte;
  struct {
    byte DDRA0   :1;           /* Data Direction Register A Bit 0 */
    byte DDRA1   :1;           /* Data Direction Register A Bit 1 */
    byte DDRA2   :1;           /* Data Direction Register A Bit 2 */
    byte DDRA3   :1;           /* Data Direction Register A Bit 3 */
    byte DDRA4   :1;           /* Data Direction Register A Bit 4 */
    byte DDRA5   :1;           /* Data Direction Register A Bit 5 */
    byte DDRA6   :1;           /* Data Direction Register A Bit 6 */
    byte DDRA7   :1;           /* Data Direction Register A Bit 7 */
  } Bits;
  struct {
    byte DDRA    :8;
  } MergedBits;
} DDRASTR;
extern volatile DDRASTR _DDRA @0x00000004;
#define DDRA _DDRA.Byte
#define DDRA_DDRA0 _DDRA.Bits.DDRA0
#define DDRA_DDRA1 _DDRA.Bits.DDRA1
#define DDRA_DDRA2 _DDRA.Bits.DDRA2
#define DDRA_DDRA3 _DDRA.Bits.DDRA3
#define DDRA_DDRA4 _DDRA.Bits.DDRA4
#define DDRA_DDRA5 _DDRA.Bits.DDRA5
#define DDRA_DDRA6 _DDRA.Bits.DDRA6
#define DDRA_DDRA7 _DDRA.Bits.DDRA7
#define DDRA_DDRA _DDRA.MergedBits.DDRA

/*** DDRB - Data Direction Register B ***/
typedef union {
  byte Byte;
  struct {
    byte DDRB0   :1;           /* Data Direction Register B Bit 0 */
    byte DDRB1   :1;           /* Data Direction Register B Bit 1 */
    byte DDRB2   :1;           /* Data Direction Register B Bit 2 */
    byte DDRB3   :1;           /* Data Direction Register B Bit 3 */
    byte DDRB4   :1;           /* Data Direction Register B Bit 4 */
    byte DDRB5   :1;           /* Data Direction Register B Bit 5 */
    byte DDRB6   :1;           /* Data Direction Register B Bit 6 */
    byte DDRB7   :1;           /* Data Direction Register B Bit 7 */
  } Bits;
  struct {
    byte DDRB    :8;
  } MergedBits;
} DDRBSTR;
extern volatile DDRBSTR _DDRB @0x00000005;
#define DDRB _DDRB.Byte
#define DDRB_DDRB0 _DDRB.Bits.DDRB0
#define DDRB_DDRB1 _DDRB.Bits.DDRB1
#define DDRB_DDRB2 _DDRB.Bits.DDRB2
#define DDRB_DDRB3 _DDRB.Bits.DDRB3
#define DDRB_DDRB4 _DDRB.Bits.DDRB4
#define DDRB_DDRB5 _DDRB.Bits.DDRB5
#define DDRB_DDRB6 _DDRB.Bits.DDRB6
#define DDRB_DDRB7 _DDRB.Bits.DDRB7
#define DDRB_DDRB _DDRB.MergedBits.DDRB

/*** DDRC - Data Direction Register C ***/
typedef union {
  byte Byte;
  struct {
    byte DDRC0   :1;           /* Data Direction Register C Bit 0 */
    byte DDRC1   :1;           /* Data Direction Register C Bit 1 */
    byte DDRC2   :1;           /* Data Direction Register C Bit 2 */
    byte DDRC3   :1;           /* Data Direction Register C Bit 3 */
    byte DDRC4   :1;           /* Data Direction Register C Bit 4 */
    byte DDRC5   :1;           /* Data Direction Register C Bit 5 */
    byte DDRC6   :1;           /* Data Direction Register C Bit 6 */
    byte         :1; 
  } Bits;
  struct {
    byte DDRC    :7;
    byte         :1;
  } MergedBits;
} DDRCSTR;
extern volatile DDRCSTR _DDRC @0x00000006;
#define DDRC _DDRC.Byte
#define DDRC_DDRC0 _DDRC.Bits.DDRC0
#define DDRC_DDRC1 _DDRC.Bits.DDRC1
#define DDRC_DDRC2 _DDRC.Bits.DDRC2
#define DDRC_DDRC3 _DDRC.Bits.DDRC3
#define DDRC_DDRC4 _DDRC.Bits.DDRC4
#define DDRC_DDRC5 _DDRC.Bits.DDRC5
#define DDRC_DDRC6 _DDRC.Bits.DDRC6
#define DDRC_DDRC _DDRC.MergedBits.DDRC

/*** DDRD - Data Direction Register D ***/
typedef union {
  byte Byte;
  struct {
    byte DDRD0   :1;           /* Data Direction Register D Bit 0 */
    byte DDRD1   :1;           /* Data Direction Register D Bit 1 */
    byte DDRD2   :1;           /* Data Direction Register D Bit 2 */
    byte DDRD3   :1;           /* Data Direction Register D Bit 3 */
    byte DDRD4   :1;           /* Data Direction Register D Bit 4 */
    byte DDRD5   :1;           /* Data Direction Register D Bit 5 */
    byte DDRD6   :1;           /* Data Direction Register D Bit 6 */
    byte DDRD7   :1;           /* Data Direction Register D Bit 7 */
  } Bits;
  struct {
    byte DDRD    :8;
  } MergedBits;
} DDRDSTR;
extern volatile DDRDSTR _DDRD @0x00000007;
#define DDRD _DDRD.Byte
#define DDRD_DDRD0 _DDRD.Bits.DDRD0
#define DDRD_DDRD1 _DDRD.Bits.DDRD1
#define DDRD_DDRD2 _DDRD.Bits.DDRD2
#define DDRD_DDRD3 _DDRD.Bits.DDRD3
#define DDRD_DDRD4 _DDRD.Bits.DDRD4
#define DDRD_DDRD5 _DDRD.Bits.DDRD5
#define DDRD_DDRD6 _DDRD.Bits.DDRD6
#define DDRD_DDRD7 _DDRD.Bits.DDRD7
#define DDRD_DDRD _DDRD.MergedBits.DDRD

/*** PTE - Port E Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte PTE0    :1;           /* Port E Data Bit 0, SCI Transmit Data Output */
    byte PTE1    :1;           /* Port E Data Bit 1, SCI Receive Data Input Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte PTE     :2;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
  } MergedBits;
} PTESTR;
extern volatile PTESTR _PTE @0x00000008;
#define PTE _PTE.Byte
#define PTE_PTE0 _PTE.Bits.PTE0
#define PTE_PTE1 _PTE.Bits.PTE1
#define PTE_PTE _PTE.MergedBits.PTE

/*** DDRE - Data Direction Register E ***/
typedef union {
  byte Byte;
  struct {
    byte DDRE0   :1;           /* Data Direction Register E Bit 0 */
    byte DDRE1   :1;           /* Data Direction Register E Bit 1 */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte DDRE    :2;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
  } MergedBits;
} DDRESTR;
extern volatile DDRESTR _DDRE @0x0000000C;
#define DDRE _DDRE.Byte
#define DDRE_DDRE0 _DDRE.Bits.DDRE0
#define DDRE_DDRE1 _DDRE.Bits.DDRE1
#define DDRE_DDRE _DDRE.MergedBits.DDRE

/*** PTAPUE - Port A Input Pullup Enable ***/
typedef union {
  byte Byte;
  struct {
    byte PTAPUE0 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE1 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE2 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE3 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE4 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE5 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE6 :1;           /* Port A Input Pullup Enable Bit */
    byte PTAPUE7 :1;           /* Port A Input Pullup Enable Bit */
  } Bits;
  struct {
    byte PTAPUE  :8;
  } MergedBits;
} PTAPUESTR;
extern volatile PTAPUESTR _PTAPUE @0x0000000D;
#define PTAPUE _PTAPUE.Byte
#define PTAPUE_PTAPUE0 _PTAPUE.Bits.PTAPUE0
#define PTAPUE_PTAPUE1 _PTAPUE.Bits.PTAPUE1
#define PTAPUE_PTAPUE2 _PTAPUE.Bits.PTAPUE2
#define PTAPUE_PTAPUE3 _PTAPUE.Bits.PTAPUE3
#define PTAPUE_PTAPUE4 _PTAPUE.Bits.PTAPUE4
#define PTAPUE_PTAPUE5 _PTAPUE.Bits.PTAPUE5
#define PTAPUE_PTAPUE6 _PTAPUE.Bits.PTAPUE6
#define PTAPUE_PTAPUE7 _PTAPUE.Bits.PTAPUE7
#define PTAPUE_PTAPUE _PTAPUE.MergedBits.PTAPUE

/*** PTCPUE - Port C Input Pullup Enable ***/
typedef union {
  byte Byte;
  struct {
    byte PTCPUE0 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE1 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE2 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE3 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE4 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE5 :1;           /* Port C Input Pullup Enable Bit */
    byte PTCPUE6 :1;           /* Port C Input Pullup Enable Bit */
    byte         :1; 
  } Bits;
  struct {
    byte PTCPUE  :7;
    byte         :1;
  } MergedBits;
} PTCPUESTR;
extern volatile PTCPUESTR _PTCPUE @0x0000000E;
#define PTCPUE _PTCPUE.Byte
#define PTCPUE_PTCPUE0 _PTCPUE.Bits.PTCPUE0
#define PTCPUE_PTCPUE1 _PTCPUE.Bits.PTCPUE1
#define PTCPUE_PTCPUE2 _PTCPUE.Bits.PTCPUE2
#define PTCPUE_PTCPUE3 _PTCPUE.Bits.PTCPUE3
#define PTCPUE_PTCPUE4 _PTCPUE.Bits.PTCPUE4
#define PTCPUE_PTCPUE5 _PTCPUE.Bits.PTCPUE5
#define PTCPUE_PTCPUE6 _PTCPUE.Bits.PTCPUE6
#define PTCPUE_PTCPUE _PTCPUE.MergedBits.PTCPUE

/*** PTDPUE - Port D Input Pullup Enable ***/
typedef union {
  byte Byte;
  struct {
    byte PTDPUE0 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE1 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE2 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE3 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE4 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE5 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE6 :1;           /* Port D Input Pullup Enable Bit */
    byte PTDPUE7 :1;           /* Port D Input Pullup Enable Bit */
  } Bits;
  struct {
    byte PTDPUE  :8;
  } MergedBits;
} PTDPUESTR;
extern volatile PTDPUESTR _PTDPUE @0x0000000F;
#define PTDPUE _PTDPUE.Byte
#define PTDPUE_PTDPUE0 _PTDPUE.Bits.PTDPUE0
#define PTDPUE_PTDPUE1 _PTDPUE.Bits.PTDPUE1
#define PTDPUE_PTDPUE2 _PTDPUE.Bits.PTDPUE2
#define PTDPUE_PTDPUE3 _PTDPUE.Bits.PTDPUE3
#define PTDPUE_PTDPUE4 _PTDPUE.Bits.PTDPUE4
#define PTDPUE_PTDPUE5 _PTDPUE.Bits.PTDPUE5
#define PTDPUE_PTDPUE6 _PTDPUE.Bits.PTDPUE6
#define PTDPUE_PTDPUE7 _PTDPUE.Bits.PTDPUE7
#define PTDPUE_PTDPUE _PTDPUE.MergedBits.PTDPUE

/*** SPCR - SPI Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte SPTIE   :1;           /* SPI Transmit Interrupt Enable Bit */
    byte SPE     :1;           /* SPI Enable Bit */
    byte SPWOM   :1;           /* SPI Wired-OR Mode Bit */
    byte CPHA    :1;           /* Clock Phase Bit */
    byte CPOL    :1;           /* Clock Polarity Bit */
    byte SPMSTR  :1;           /* SPI Master Bit */
    byte         :1; 
    byte SPRIE   :1;           /* SPI Receiver Interrupt Enable Bit */
  } Bits;
} SPCRSTR;
extern volatile SPCRSTR _SPCR @0x00000010;
#define SPCR _SPCR.Byte
#define SPCR_SPTIE _SPCR.Bits.SPTIE
#define SPCR_SPE _SPCR.Bits.SPE
#define SPCR_SPWOM _SPCR.Bits.SPWOM
#define SPCR_CPHA _SPCR.Bits.CPHA
#define SPCR_CPOL _SPCR.Bits.CPOL
#define SPCR_SPMSTR _SPCR.Bits.SPMSTR
#define SPCR_SPRIE _SPCR.Bits.SPRIE

/*** SPSCR - SPI Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte SPR0    :1;           /* SPI Baud Rate Select Bit 0 */
    byte SPR1    :1;           /* SPI Baud Rate Select Bit 1 */
    byte MODFEN  :1;           /* Mode Fault Enable Bit */
    byte SPTE    :1;           /* SPI Transmitter Empty Bit */
    byte MODF    :1;           /* Mode Fault Bit */
    byte OVRF    :1;           /* Overflow Bit */
    byte ERRIE   :1;           /* Error Interrupt Enable Bit */
    byte SPRF    :1;           /* SPI Receiver Full Bit */
  } Bits;
  struct {
    byte SPR     :2;
    byte MODFEN  :1;
    byte SPTE    :1;
    byte MODF    :1;
    byte OVRF    :1;
    byte ERRIE   :1;
    byte SPRF    :1;
  } MergedBits;
} SPSCRSTR;
extern volatile SPSCRSTR _SPSCR @0x00000011;
#define SPSCR _SPSCR.Byte
#define SPSCR_SPR0 _SPSCR.Bits.SPR0
#define SPSCR_SPR1 _SPSCR.Bits.SPR1
#define SPSCR_MODFEN _SPSCR.Bits.MODFEN
#define SPSCR_SPTE _SPSCR.Bits.SPTE
#define SPSCR_MODF _SPSCR.Bits.MODF
#define SPSCR_OVRF _SPSCR.Bits.OVRF
#define SPSCR_ERRIE _SPSCR.Bits.ERRIE
#define SPSCR_SPRF _SPSCR.Bits.SPRF
#define SPSCR_SPR _SPSCR.MergedBits.SPR

/*** SPDR - SPI Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte R0_T0   :1;           /* Receive/Transmit Data Bit 0 */
    byte R1_T1   :1;           /* Receive/Transmit Data Bit 1 */
    byte R2_T2   :1;           /* Receive/Transmit Data Bit 2 */
    byte R3_T3   :1;           /* Receive/Transmit Data Bit 3 */
    byte R4_T4   :1;           /* Receive/Transmit Data Bit 4 */
    byte R5_T5   :1;           /* Receive/Transmit Data Bit 5 */
    byte R6_T6   :1;           /* Receive/Transmit Data Bit 6 */
    byte R7_T7   :1;           /* Receive/Transmit Data Bit 7 */
  } Bits;
  struct {
    byte R0_T    :8;
  } MergedBits;
} SPDRSTR;
extern volatile SPDRSTR _SPDR @0x00000012;
#define SPDR _SPDR.Byte
#define SPDR_R0_T0 _SPDR.Bits.R0_T0
#define SPDR_R1_T1 _SPDR.Bits.R1_T1
#define SPDR_R2_T2 _SPDR.Bits.R2_T2
#define SPDR_R3_T3 _SPDR.Bits.R3_T3
#define SPDR_R4_T4 _SPDR.Bits.R4_T4
#define SPDR_R5_T5 _SPDR.Bits.R5_T5
#define SPDR_R6_T6 _SPDR.Bits.R6_T6
#define SPDR_R7_T7 _SPDR.Bits.R7_T7
#define SPDR_R0_T _SPDR.MergedBits.R0_T

/*** SCC1 - SCI Control Register 1 ***/
typedef union {
  byte Byte;
  struct {
    byte PTY     :1;           /* Parity Bit */
    byte PEN     :1;           /* Parity Enable Bit */
    byte ILTY    :1;           /* Idle Line Type Bit */
    byte WAKE    :1;           /* Wakeup Condition Bit */
    byte M       :1;           /* Mode (Character Length) Bit */
    byte TXINV   :1;           /* Transmit Inversion Bit */
    byte ENSCI   :1;           /* Enable SCI Bit */
    byte LOOPS   :1;           /* Loop Mode Select Bit */
  } Bits;
} SCC1STR;
extern volatile SCC1STR _SCC1 @0x00000013;
#define SCC1 _SCC1.Byte
#define SCC1_PTY _SCC1.Bits.PTY
#define SCC1_PEN _SCC1.Bits.PEN
#define SCC1_ILTY _SCC1.Bits.ILTY
#define SCC1_WAKE _SCC1.Bits.WAKE
#define SCC1_M _SCC1.Bits.M
#define SCC1_TXINV _SCC1.Bits.TXINV
#define SCC1_ENSCI _SCC1.Bits.ENSCI
#define SCC1_LOOPS _SCC1.Bits.LOOPS

/*** SCC2 - SCI Control Register 2 ***/
typedef union {
  byte Byte;
  struct {
    byte SBK     :1;           /* Send Break Bit */
    byte RWU     :1;           /* Receiver Wakeup Bit */
    byte RE      :1;           /* Receiver Enable Bit */
    byte TE      :1;           /* Transmitter Enable Bit */
    byte ILIE    :1;           /* Idle Line Interrupt Enable Bit */
    byte SCRIE   :1;           /* SCI Receive Interrupt Enable Bit */
    byte TCIE    :1;           /* Transmission Complete Interrupt Enable Bit */
    byte SCTIE   :1;           /* SCI Transmit Interrupt Enable Bit */
  } Bits;
} SCC2STR;
extern volatile SCC2STR _SCC2 @0x00000014;
#define SCC2 _SCC2.Byte
#define SCC2_SBK _SCC2.Bits.SBK
#define SCC2_RWU _SCC2.Bits.RWU
#define SCC2_RE _SCC2.Bits.RE
#define SCC2_TE _SCC2.Bits.TE
#define SCC2_ILIE _SCC2.Bits.ILIE
#define SCC2_SCRIE _SCC2.Bits.SCRIE
#define SCC2_TCIE _SCC2.Bits.TCIE
#define SCC2_SCTIE _SCC2.Bits.SCTIE

/*** SCC3 - SCI Control Register 3 ***/
typedef union {
  byte Byte;
  struct {
    byte PEIE    :1;           /* Receiver Parity Error Interrupt Enable Bit */
    byte FEIE    :1;           /* Receiver Framing Error Interrupt Enable Bit */
    byte NEIE    :1;           /* Receiver Noise Error Interrupt Enable Bit */
    byte ORIE    :1;           /* Receiver Overrun Interrupt Enable Bit */
    byte         :1; 
    byte         :1; 
    byte T8      :1;           /* Transmitted Bit 8 */
    byte R8      :1;           /* Received Bit 8 */
  } Bits;
} SCC3STR;
extern volatile SCC3STR _SCC3 @0x00000015;
#define SCC3 _SCC3.Byte
#define SCC3_PEIE _SCC3.Bits.PEIE
#define SCC3_FEIE _SCC3.Bits.FEIE
#define SCC3_NEIE _SCC3.Bits.NEIE
#define SCC3_ORIE _SCC3.Bits.ORIE
#define SCC3_T8 _SCC3.Bits.T8
#define SCC3_R8 _SCC3.Bits.R8

/*** SCS1 - SCI Status Register 1 ***/
typedef union {
  byte Byte;
  struct {
    byte PE      :1;           /* Receiver Parity Error Bit */
    byte FE      :1;           /* Receiver Framing Error Bit */
    byte NF      :1;           /* Receiver Noise Flag Bit */
    byte OR      :1;           /* Receiver Overrun Bit */
    byte IDLE    :1;           /* Receiver Idle Bit */
    byte SCRF    :1;           /* SCI Receiver Full Bit */
    byte TC      :1;           /* Transmission Complete Bit */
    byte SCTE    :1;           /* SCI Transmitter Empty Bit */
  } Bits;
} SCS1STR;
extern volatile SCS1STR _SCS1 @0x00000016;
#define SCS1 _SCS1.Byte
#define SCS1_PE _SCS1.Bits.PE
#define SCS1_FE _SCS1.Bits.FE
#define SCS1_NF _SCS1.Bits.NF
#define SCS1_OR _SCS1.Bits.OR
#define SCS1_IDLE _SCS1.Bits.IDLE
#define SCS1_SCRF _SCS1.Bits.SCRF
#define SCS1_TC _SCS1.Bits.TC
#define SCS1_SCTE _SCS1.Bits.SCTE

/*** SCS2 - SCI Status Register 2 ***/
typedef union {
  byte Byte;
  struct {
    byte RPF     :1;           /* Reception in Progress Flag Bit */
    byte BKF     :1;           /* Break Flag Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} SCS2STR;
extern volatile SCS2STR _SCS2 @0x00000017;
#define SCS2 _SCS2.Byte
#define SCS2_RPF _SCS2.Bits.RPF
#define SCS2_BKF _SCS2.Bits.BKF

/*** SCDR - SCI Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte R0_T0   :1;           /* Receive/Transmit Data Bit 0 */
    byte R1_T1   :1;           /* Receive/Transmit Data Bit 1 */
    byte R2_T2   :1;           /* Receive/Transmit Data Bit 2 */
    byte R3_T3   :1;           /* Receive/Transmit Data Bit 3 */
    byte R4_T4   :1;           /* Receive/Transmit Data Bit 4 */
    byte R5_T5   :1;           /* Receive/Transmit Data Bit 5 */
    byte R6_T6   :1;           /* Receive/Transmit Data Bit 6 */
    byte R7_T7   :1;           /* Receive/Transmit Data Bit 7 */
  } Bits;
  struct {
    byte R0_T    :8;
  } MergedBits;
} SCDRSTR;
extern volatile SCDRSTR _SCDR @0x00000018;
#define SCDR _SCDR.Byte
#define SCDR_R0_T0 _SCDR.Bits.R0_T0
#define SCDR_R1_T1 _SCDR.Bits.R1_T1
#define SCDR_R2_T2 _SCDR.Bits.R2_T2
#define SCDR_R3_T3 _SCDR.Bits.R3_T3
#define SCDR_R4_T4 _SCDR.Bits.R4_T4
#define SCDR_R5_T5 _SCDR.Bits.R5_T5
#define SCDR_R6_T6 _SCDR.Bits.R6_T6
#define SCDR_R7_T7 _SCDR.Bits.R7_T7
#define SCDR_R0_T _SCDR.MergedBits.R0_T

/*** SCBR - SCI Baud Rate Register ***/
typedef union {
  byte Byte;
  struct {
    byte SCR0    :1;           /* SCI Baud Rate Select Bit 0 */
    byte SCR1    :1;           /* SCI Baud Rate Select Bit 1 */
    byte SCR2    :1;           /* SCI Baud Rate Select Bit 2 */
    byte         :1; 
    byte SCP0    :1;           /* SCI Baud Rate Prescaler Bit 0 */
    byte SCP1    :1;           /* SCI Baud Rate Prescaler Bit 1 */
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte SCR     :3;
    byte         :1;
    byte SCP     :2;
    byte         :1;
    byte         :1;
  } MergedBits;
} SCBRSTR;
extern volatile SCBRSTR _SCBR @0x00000019;
#define SCBR _SCBR.Byte
#define SCBR_SCR0 _SCBR.Bits.SCR0
#define SCBR_SCR1 _SCBR.Bits.SCR1
#define SCBR_SCR2 _SCBR.Bits.SCR2
#define SCBR_SCP0 _SCBR.Bits.SCP0
#define SCBR_SCP1 _SCBR.Bits.SCP1
#define SCBR_SCR _SCBR.MergedBits.SCR
#define SCBR_SCP _SCBR.MergedBits.SCP

/*** INTKBSCR - Keyboard Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte MODEK   :1;           /* Keyboard Triggering Sensitivity Bit */
    byte IMASKK  :1;           /* Keyboard Interrupt Mask Bit */
    byte ACKK    :1;           /* Keyboard Acknowledge Bit */
    byte KEYF    :1;           /* Keyboard Flag Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} INTKBSCRSTR;
extern volatile INTKBSCRSTR _INTKBSCR @0x0000001A;
#define INTKBSCR _INTKBSCR.Byte
#define INTKBSCR_MODEK _INTKBSCR.Bits.MODEK
#define INTKBSCR_IMASKK _INTKBSCR.Bits.IMASKK
#define INTKBSCR_ACKK _INTKBSCR.Bits.ACKK
#define INTKBSCR_KEYF _INTKBSCR.Bits.KEYF

/*** INTKBIER - Keyobard Interrupt Enable Register ***/
typedef union {
  byte Byte;
  struct {
    byte KBIE0   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE1   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE2   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE3   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE4   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE5   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE6   :1;           /* Keyboard Interrut Enable Bit */
    byte KBIE7   :1;           /* Keyboard Interrut Enable Bit */
  } Bits;
  struct {
    byte KBIE    :8;
  } MergedBits;
} INTKBIERSTR;
extern volatile INTKBIERSTR _INTKBIER @0x0000001B;
#define INTKBIER _INTKBIER.Byte
#define INTKBIER_KBIE0 _INTKBIER.Bits.KBIE0
#define INTKBIER_KBIE1 _INTKBIER.Bits.KBIE1
#define INTKBIER_KBIE2 _INTKBIER.Bits.KBIE2
#define INTKBIER_KBIE3 _INTKBIER.Bits.KBIE3
#define INTKBIER_KBIE4 _INTKBIER.Bits.KBIE4
#define INTKBIER_KBIE5 _INTKBIER.Bits.KBIE5
#define INTKBIER_KBIE6 _INTKBIER.Bits.KBIE6
#define INTKBIER_KBIE7 _INTKBIER.Bits.KBIE7
#define INTKBIER_KBIE _INTKBIER.MergedBits.KBIE

/*** TBCR - Timebase Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte TBON    :1;           /* Timebase Enabled */
    byte TBIE    :1;           /* Timebase Interrupt Enable */
    byte TACK    :1;           /* Timebase ACKnowledge */
    byte TBR0    :1;           /* Timebase Rate Selection */
    byte TBR1    :1;           /* Timebase Rate Selection */
    byte TBR2    :1;           /* Timebase Rate Selection */
    byte TBIF    :1;           /* Timebase Interrupt Flag */
  } Bits;
  struct {
    byte         :1;
    byte TBON    :1;
    byte TBIE    :1;
    byte TACK    :1;
    byte TBR     :3;
    byte TBIF    :1;
  } MergedBits;
} TBCRSTR;
extern volatile TBCRSTR _TBCR @0x0000001C;
#define TBCR _TBCR.Byte
#define TBCR_TBON _TBCR.Bits.TBON
#define TBCR_TBIE _TBCR.Bits.TBIE
#define TBCR_TACK _TBCR.Bits.TACK
#define TBCR_TBR0 _TBCR.Bits.TBR0
#define TBCR_TBR1 _TBCR.Bits.TBR1
#define TBCR_TBR2 _TBCR.Bits.TBR2
#define TBCR_TBIF _TBCR.Bits.TBIF
#define TBCR_TBR _TBCR.MergedBits.TBR

/*** INTSCR - IRQ Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte MODE    :1;           /* IRQ Edge/Level Select Bit */
    byte IMASK   :1;           /* IRQ Interrupt Mask Bit */
    byte ACK     :1;           /* IRQ Interrupt Request Acknowledge Bit */
    byte IRQF    :1;           /* IRQ Flag Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} INTSCRSTR;
extern volatile INTSCRSTR _INTSCR @0x0000001D;
#define INTSCR _INTSCR.Byte
#define INTSCR_MODE _INTSCR.Bits.MODE
#define INTSCR_IMASK _INTSCR.Bits.IMASK
#define INTSCR_ACK _INTSCR.Bits.ACK
#define INTSCR_IRQF _INTSCR.Bits.IRQF

/*** CONFIG2 - Configuration Register 2 ***/
typedef union {
  byte Byte;
  struct {
    byte SCIBDSRC :1;          /* SCI Baud Rate Clock Source Bit */
    byte OSCSTOPENB :1;        /* Oscillator Stop Mode Enable Bar Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} CONFIG2STR;
extern volatile CONFIG2STR _CONFIG2 @0x0000001E;
#define CONFIG2 _CONFIG2.Byte
#define CONFIG2_SCIBDSRC _CONFIG2.Bits.SCIBDSRC
#define CONFIG2_OSCSTOPENB _CONFIG2.Bits.OSCSTOPENB

/*** CONFIG1 - Configuration Register 2 ***/
typedef union {
  byte Byte;
  struct {
    byte COPD    :1;           /* COP Disable Bit */
    byte STOP    :1;           /* STOP Instruction Enable Bit */
    byte SSREC   :1;           /* Short Stop Recovery Bit */
    byte LVI5OR3 :1;           /* LVI 5-V or 3-V Operating Mode Bit */
    byte LVIPWRD :1;           /* LVI Power Disable Bit */
    byte LVIRSTD :1;           /* LVI Reset Disable Bit */
    byte LVISTOP :1;           /* LVI Enable in Stop Mode Bit */
    byte COPRS   :1;           /* COP rate Select Bit */
  } Bits;
} CONFIG1STR;
extern volatile CONFIG1STR _CONFIG1 @0x0000001F;
#define CONFIG1 _CONFIG1.Byte
#define CONFIG1_COPD _CONFIG1.Bits.COPD
#define CONFIG1_STOP _CONFIG1.Bits.STOP
#define CONFIG1_SSREC _CONFIG1.Bits.SSREC
#define CONFIG1_LVI5OR3 _CONFIG1.Bits.LVI5OR3
#define CONFIG1_LVIPWRD _CONFIG1.Bits.LVIPWRD
#define CONFIG1_LVIRSTD _CONFIG1.Bits.LVIRSTD
#define CONFIG1_LVISTOP _CONFIG1.Bits.LVISTOP
#define CONFIG1_COPRS _CONFIG1.Bits.COPRS

/*** T1SC - TIM1 Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte PS0     :1;           /* Prescaler Select Bit 0 */
    byte PS1     :1;           /* Prescaler Select Bit 1 */
    byte PS2     :1;           /* Prescaler Select Bit 2 */
    byte         :1; 
    byte TRST    :1;           /* TIM1 Reset Bit */
    byte TSTOP   :1;           /* TIM1 Stop Bit */
    byte TOIE    :1;           /* TIM1 Overflow Interrupt Enable Bit */
    byte TOF     :1;           /* TIM1 Overflow Flag Bit */
  } Bits;
  struct {
    byte PS      :3;
    byte         :1;
    byte TRST    :1;
    byte TSTOP   :1;
    byte TOIE    :1;
    byte TOF     :1;
  } MergedBits;
} T1SCSTR;
extern volatile T1SCSTR _T1SC @0x00000020;
#define T1SC _T1SC.Byte
#define T1SC_PS0 _T1SC.Bits.PS0
#define T1SC_PS1 _T1SC.Bits.PS1
#define T1SC_PS2 _T1SC.Bits.PS2
#define T1SC_TRST _T1SC.Bits.TRST
#define T1SC_TSTOP _T1SC.Bits.TSTOP
#define T1SC_TOIE _T1SC.Bits.TOIE
#define T1SC_TOF _T1SC.Bits.TOF
#define T1SC_PS _T1SC.MergedBits.PS

/*** T1CNTH - TIM1 Counter Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM Counter Register BIT 8 */
    byte BIT9    :1;           /* TIM Counter Register BIT 9 */
    byte BIT10   :1;           /* TIM Counter Register BIT 10 */
    byte BIT11   :1;           /* TIM Counter Register BIT 11 */
    byte BIT12   :1;           /* TIM Counter Register BIT 12 */
    byte BIT13   :1;           /* TIM Counter Register BIT 13 */
    byte BIT14   :1;           /* TIM Counter Register BIT 14 */
    byte BIT15   :1;           /* TIM Counter Register BIT 15 */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T1CNTHSTR;
extern volatile T1CNTHSTR _T1CNTH @0x00000021;
#define T1CNTH _T1CNTH.Byte
#define T1CNTH_BIT8 _T1CNTH.Bits.BIT8
#define T1CNTH_BIT9 _T1CNTH.Bits.BIT9
#define T1CNTH_BIT10 _T1CNTH.Bits.BIT10
#define T1CNTH_BIT11 _T1CNTH.Bits.BIT11
#define T1CNTH_BIT12 _T1CNTH.Bits.BIT12
#define T1CNTH_BIT13 _T1CNTH.Bits.BIT13
#define T1CNTH_BIT14 _T1CNTH.Bits.BIT14
#define T1CNTH_BIT15 _T1CNTH.Bits.BIT15
#define T1CNTH_BIT_8 _T1CNTH.MergedBits.BIT_8

/*** T1CNTL - TIM1 Counter Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM Counter Register BIT 0 */
    byte BIT1    :1;           /* TIM Counter Register BIT 1 */
    byte BIT2    :1;           /* TIM Counter Register BIT 2 */
    byte BIT3    :1;           /* TIM Counter Register BIT 3 */
    byte BIT4    :1;           /* TIM Counter Register BIT 4 */
    byte BIT5    :1;           /* TIM Counter Register BIT 5 */
    byte BIT6    :1;           /* TIM Counter Register BIT 6 */
    byte BIT7    :1;           /* TIM Counter Register BIT 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T1CNTLSTR;
extern volatile T1CNTLSTR _T1CNTL @0x00000022;
#define T1CNTL _T1CNTL.Byte
#define T1CNTL_BIT0 _T1CNTL.Bits.BIT0
#define T1CNTL_BIT1 _T1CNTL.Bits.BIT1
#define T1CNTL_BIT2 _T1CNTL.Bits.BIT2
#define T1CNTL_BIT3 _T1CNTL.Bits.BIT3
#define T1CNTL_BIT4 _T1CNTL.Bits.BIT4
#define T1CNTL_BIT5 _T1CNTL.Bits.BIT5
#define T1CNTL_BIT6 _T1CNTL.Bits.BIT6
#define T1CNTL_BIT7 _T1CNTL.Bits.BIT7
#define T1CNTL_BIT _T1CNTL.MergedBits.BIT

/*** T1MODH - TIM1 Counter Modulo Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT9    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT10   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT11   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT12   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT13   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT14   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT15   :1;           /* TIM1 Counter Modulo Bit */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T1MODHSTR;
extern volatile T1MODHSTR _T1MODH @0x00000023;
#define T1MODH _T1MODH.Byte
#define T1MODH_BIT8 _T1MODH.Bits.BIT8
#define T1MODH_BIT9 _T1MODH.Bits.BIT9
#define T1MODH_BIT10 _T1MODH.Bits.BIT10
#define T1MODH_BIT11 _T1MODH.Bits.BIT11
#define T1MODH_BIT12 _T1MODH.Bits.BIT12
#define T1MODH_BIT13 _T1MODH.Bits.BIT13
#define T1MODH_BIT14 _T1MODH.Bits.BIT14
#define T1MODH_BIT15 _T1MODH.Bits.BIT15
#define T1MODH_BIT_8 _T1MODH.MergedBits.BIT_8

/*** T1MODL - TIM1 Counter Modulo Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT1    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT2    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT3    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT4    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT5    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT6    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT7    :1;           /* TIM1 Counter Modulo Bit */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T1MODLSTR;
extern volatile T1MODLSTR _T1MODL @0x00000024;
#define T1MODL _T1MODL.Byte
#define T1MODL_BIT0 _T1MODL.Bits.BIT0
#define T1MODL_BIT1 _T1MODL.Bits.BIT1
#define T1MODL_BIT2 _T1MODL.Bits.BIT2
#define T1MODL_BIT3 _T1MODL.Bits.BIT3
#define T1MODL_BIT4 _T1MODL.Bits.BIT4
#define T1MODL_BIT5 _T1MODL.Bits.BIT5
#define T1MODL_BIT6 _T1MODL.Bits.BIT6
#define T1MODL_BIT7 _T1MODL.Bits.BIT7
#define T1MODL_BIT _T1MODL.MergedBits.BIT

/*** T1SC0 - TIM1 Channel Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte CH0MAX  :1;           /* Channel 0 Maximum Duty Cycle Bit */
    byte TOV0    :1;           /* Toggle-On-Overflow Bit */
    byte ELS0A   :1;           /* Edge/Level Select Bit */
    byte ELS0B   :1;           /* Edge/Level Select Bit */
    byte MS0A    :1;           /* Mode Select Bit A */
    byte MS0B    :1;           /* Mode Select Bit B */
    byte CH0IE   :1;           /* Channel 0 Interrupt Enable Bit */
    byte CH0F    :1;           /* Channel 0 Flag Bit */
  } Bits;
} T1SC0STR;
extern volatile T1SC0STR _T1SC0 @0x00000025;
#define T1SC0 _T1SC0.Byte
#define T1SC0_CH0MAX _T1SC0.Bits.CH0MAX
#define T1SC0_TOV0 _T1SC0.Bits.TOV0
#define T1SC0_ELS0A _T1SC0.Bits.ELS0A
#define T1SC0_ELS0B _T1SC0.Bits.ELS0B
#define T1SC0_MS0A _T1SC0.Bits.MS0A
#define T1SC0_MS0B _T1SC0.Bits.MS0B
#define T1SC0_CH0IE _T1SC0.Bits.CH0IE
#define T1SC0_CH0F _T1SC0.Bits.CH0F

/*** T1CH0H - TIM1 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM1 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM1 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM1 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM1 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM1 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM1 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM1 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM1 Channel Register BIT 15 */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T1CH0HSTR;
extern volatile T1CH0HSTR _T1CH0H @0x00000026;
#define T1CH0H _T1CH0H.Byte
#define T1CH0H_BIT8 _T1CH0H.Bits.BIT8
#define T1CH0H_BIT9 _T1CH0H.Bits.BIT9
#define T1CH0H_BIT10 _T1CH0H.Bits.BIT10
#define T1CH0H_BIT11 _T1CH0H.Bits.BIT11
#define T1CH0H_BIT12 _T1CH0H.Bits.BIT12
#define T1CH0H_BIT13 _T1CH0H.Bits.BIT13
#define T1CH0H_BIT14 _T1CH0H.Bits.BIT14
#define T1CH0H_BIT15 _T1CH0H.Bits.BIT15
#define T1CH0H_BIT_8 _T1CH0H.MergedBits.BIT_8

/*** T1CH0L - TIM1 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM1 Channel Register BIT 1 */
    byte BIT2    :1;           /* TIM1 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM1 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM1 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM1 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM1 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM1 Channel Register BIT 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T1CH0LSTR;
extern volatile T1CH0LSTR _T1CH0L @0x00000027;
#define T1CH0L _T1CH0L.Byte
#define T1CH0L_BIT0 _T1CH0L.Bits.BIT0
#define T1CH0L_BIT1 _T1CH0L.Bits.BIT1
#define T1CH0L_BIT2 _T1CH0L.Bits.BIT2
#define T1CH0L_BIT3 _T1CH0L.Bits.BIT3
#define T1CH0L_BIT4 _T1CH0L.Bits.BIT4
#define T1CH0L_BIT5 _T1CH0L.Bits.BIT5
#define T1CH0L_BIT6 _T1CH0L.Bits.BIT6
#define T1CH0L_BIT7 _T1CH0L.Bits.BIT7
#define T1CH0L_BIT _T1CH0L.MergedBits.BIT

/*** T1SC1 - TIM1 Channel Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte CH1MAX  :1;           /* Channel 1 Maximum Duty Cycle Bit */
    byte TOV1    :1;           /* Toggle-On-Overflow Bit */
    byte ELS1A   :1;           /* Edge/Level Select Bit */
    byte ELS1B   :1;           /* Edge/Level Select Bit */
    byte MS1A    :1;           /* Mode Select Bit A */
    byte         :1; 
    byte CH1IE   :1;           /* Channel 1 Interrupt Enable Bit */
    byte CH1F    :1;           /* Channel 1 Flag Bit */
  } Bits;
} T1SC1STR;
extern volatile T1SC1STR _T1SC1 @0x00000028;
#define T1SC1 _T1SC1.Byte
#define T1SC1_CH1MAX _T1SC1.Bits.CH1MAX
#define T1SC1_TOV1 _T1SC1.Bits.TOV1
#define T1SC1_ELS1A _T1SC1.Bits.ELS1A
#define T1SC1_ELS1B _T1SC1.Bits.ELS1B
#define T1SC1_MS1A _T1SC1.Bits.MS1A
#define T1SC1_CH1IE _T1SC1.Bits.CH1IE
#define T1SC1_CH1F _T1SC1.Bits.CH1F

/*** T1CH1H - TIM1 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM1 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM1 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM1 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM1 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM1 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM1 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM1 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM1 Channel Register BIT 15 */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T1CH1HSTR;
extern volatile T1CH1HSTR _T1CH1H @0x00000029;
#define T1CH1H _T1CH1H.Byte
#define T1CH1H_BIT8 _T1CH1H.Bits.BIT8
#define T1CH1H_BIT9 _T1CH1H.Bits.BIT9
#define T1CH1H_BIT10 _T1CH1H.Bits.BIT10
#define T1CH1H_BIT11 _T1CH1H.Bits.BIT11
#define T1CH1H_BIT12 _T1CH1H.Bits.BIT12
#define T1CH1H_BIT13 _T1CH1H.Bits.BIT13
#define T1CH1H_BIT14 _T1CH1H.Bits.BIT14
#define T1CH1H_BIT15 _T1CH1H.Bits.BIT15
#define T1CH1H_BIT_8 _T1CH1H.MergedBits.BIT_8

/*** T1CH1L - TIM1 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM1 Channel Register BIT 1 */
    byte BIT2    :1;           /* TIM1 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM1 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM1 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM1 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM1 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM1 Channel Register BIT 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T1CH1LSTR;
extern volatile T1CH1LSTR _T1CH1L @0x0000002A;
#define T1CH1L _T1CH1L.Byte
#define T1CH1L_BIT0 _T1CH1L.Bits.BIT0
#define T1CH1L_BIT1 _T1CH1L.Bits.BIT1
#define T1CH1L_BIT2 _T1CH1L.Bits.BIT2
#define T1CH1L_BIT3 _T1CH1L.Bits.BIT3
#define T1CH1L_BIT4 _T1CH1L.Bits.BIT4
#define T1CH1L_BIT5 _T1CH1L.Bits.BIT5
#define T1CH1L_BIT6 _T1CH1L.Bits.BIT6
#define T1CH1L_BIT7 _T1CH1L.Bits.BIT7
#define T1CH1L_BIT _T1CH1L.MergedBits.BIT

/*** T2SC - TIM2 Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte PS0     :1;           /* Prescaler Select Bit */
    byte PS1     :1;           /* Prescaler Select Bit */
    byte PS2     :1;           /* Prescaler Select Bit */
    byte         :1; 
    byte TRST    :1;           /* TIM2 Reset Bit */
    byte TSTOP   :1;           /* TIM2 Stop Bit */
    byte TOIE    :1;           /* TIM2 Overflow Interrupt Enable Bit */
    byte TOF     :1;           /* TIM2 Overflow Flag Bit */
  } Bits;
  struct {
    byte PS      :3;
    byte         :1;
    byte TRST    :1;
    byte TSTOP   :1;
    byte TOIE    :1;
    byte TOF     :1;
  } MergedBits;
} T2SCSTR;
extern volatile T2SCSTR _T2SC @0x0000002B;
#define T2SC _T2SC.Byte
#define T2SC_PS0 _T2SC.Bits.PS0
#define T2SC_PS1 _T2SC.Bits.PS1
#define T2SC_PS2 _T2SC.Bits.PS2
#define T2SC_TRST _T2SC.Bits.TRST
#define T2SC_TSTOP _T2SC.Bits.TSTOP
#define T2SC_TOIE _T2SC.Bits.TOIE
#define T2SC_TOF _T2SC.Bits.TOF
#define T2SC_PS _T2SC.MergedBits.PS

/*** T2CNTH - TIM2 Counter Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM2 Counter Bit */
    byte BIT9    :1;           /* TIM2 Counter Bit */
    byte BIT10   :1;           /* TIM2 Counter Bit */
    byte BIT11   :1;           /* TIM2 Counter Bit */
    byte BIT12   :1;           /* TIM2 Counter Bit */
    byte BIT13   :1;           /* TIM2 Counter Bit */
    byte BIT14   :1;           /* TIM2 Counter Bit */
    byte BIT15   :1;           /* TIM2 Counter Bit */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T2CNTHSTR;
extern volatile T2CNTHSTR _T2CNTH @0x0000002C;
#define T2CNTH _T2CNTH.Byte
#define T2CNTH_BIT8 _T2CNTH.Bits.BIT8
#define T2CNTH_BIT9 _T2CNTH.Bits.BIT9
#define T2CNTH_BIT10 _T2CNTH.Bits.BIT10
#define T2CNTH_BIT11 _T2CNTH.Bits.BIT11
#define T2CNTH_BIT12 _T2CNTH.Bits.BIT12
#define T2CNTH_BIT13 _T2CNTH.Bits.BIT13
#define T2CNTH_BIT14 _T2CNTH.Bits.BIT14
#define T2CNTH_BIT15 _T2CNTH.Bits.BIT15
#define T2CNTH_BIT_8 _T2CNTH.MergedBits.BIT_8

/*** T2CNTL - TIM2 Counter Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Counter Register Bit 0 */
    byte BIT1    :1;           /* TIM2 Counter Register Bit 1 */
    byte BIT2    :1;           /* TIM2 Counter Register Bit 2 */
    byte BIT3    :1;           /* TIM2 Counter Register Bit 3 */
    byte BIT4    :1;           /* TIM2 Counter Register Bit 4 */
    byte BIT5    :1;           /* TIM2 Counter Register Bit 5 */
    byte BIT6    :1;           /* TIM2 Counter Register Bit 6 */
    byte BIT7    :1;           /* TIM2 Counter Register Bit 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T2CNTLSTR;
extern volatile T2CNTLSTR _T2CNTL @0x0000002D;
#define T2CNTL _T2CNTL.Byte
#define T2CNTL_BIT0 _T2CNTL.Bits.BIT0
#define T2CNTL_BIT1 _T2CNTL.Bits.BIT1
#define T2CNTL_BIT2 _T2CNTL.Bits.BIT2
#define T2CNTL_BIT3 _T2CNTL.Bits.BIT3
#define T2CNTL_BIT4 _T2CNTL.Bits.BIT4
#define T2CNTL_BIT5 _T2CNTL.Bits.BIT5
#define T2CNTL_BIT6 _T2CNTL.Bits.BIT6
#define T2CNTL_BIT7 _T2CNTL.Bits.BIT7
#define T2CNTL_BIT _T2CNTL.MergedBits.BIT

/*** T2MODH - TIM2 Counter Modulo Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT9    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT10   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT11   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT12   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT13   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT14   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT15   :1;           /* TIM2 Counter Modulo Bit */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T2MODHSTR;
extern volatile T2MODHSTR _T2MODH @0x0000002E;
#define T2MODH _T2MODH.Byte
#define T2MODH_BIT8 _T2MODH.Bits.BIT8
#define T2MODH_BIT9 _T2MODH.Bits.BIT9
#define T2MODH_BIT10 _T2MODH.Bits.BIT10
#define T2MODH_BIT11 _T2MODH.Bits.BIT11
#define T2MODH_BIT12 _T2MODH.Bits.BIT12
#define T2MODH_BIT13 _T2MODH.Bits.BIT13
#define T2MODH_BIT14 _T2MODH.Bits.BIT14
#define T2MODH_BIT15 _T2MODH.Bits.BIT15
#define T2MODH_BIT_8 _T2MODH.MergedBits.BIT_8

/*** T2MODL - TIM2 Counter Modulo Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT1    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT2    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT3    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT4    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT5    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT6    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT7    :1;           /* TIM2 Counter Modulo Bit */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T2MODLSTR;
extern volatile T2MODLSTR _T2MODL @0x0000002F;
#define T2MODL _T2MODL.Byte
#define T2MODL_BIT0 _T2MODL.Bits.BIT0
#define T2MODL_BIT1 _T2MODL.Bits.BIT1
#define T2MODL_BIT2 _T2MODL.Bits.BIT2
#define T2MODL_BIT3 _T2MODL.Bits.BIT3
#define T2MODL_BIT4 _T2MODL.Bits.BIT4
#define T2MODL_BIT5 _T2MODL.Bits.BIT5
#define T2MODL_BIT6 _T2MODL.Bits.BIT6
#define T2MODL_BIT7 _T2MODL.Bits.BIT7
#define T2MODL_BIT _T2MODL.MergedBits.BIT

/*** T2SC0 - TIM2 Channel Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte CH0MAX  :1;           /* Channel 0 Maximum Duty Cycle Bit */
    byte TOV0    :1;           /* Toggle-On-Overflow Bit */
    byte ELS0A   :1;           /* Edge/Level Select Bit */
    byte ELS0B   :1;           /* Edge/Level Select Bit */
    byte MS0A    :1;           /* Mode Select Bit A */
    byte MS0B    :1;           /* Mode Select Bit B */
    byte CH0IE   :1;           /* Channel 0 Interrupt Enable Bit */
    byte CH0F    :1;           /* Channel 0 Flag Bit */
  } Bits;
} T2SC0STR;
extern volatile T2SC0STR _T2SC0 @0x00000030;
#define T2SC0 _T2SC0.Byte
#define T2SC0_CH0MAX _T2SC0.Bits.CH0MAX
#define T2SC0_TOV0 _T2SC0.Bits.TOV0
#define T2SC0_ELS0A _T2SC0.Bits.ELS0A
#define T2SC0_ELS0B _T2SC0.Bits.ELS0B
#define T2SC0_MS0A _T2SC0.Bits.MS0A
#define T2SC0_MS0B _T2SC0.Bits.MS0B
#define T2SC0_CH0IE _T2SC0.Bits.CH0IE
#define T2SC0_CH0F _T2SC0.Bits.CH0F

/*** T2CH0H - TIM2 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM2 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM2 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM2 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM2 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM2 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM2 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM2 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM2 Channel Register BIT 15 */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T2CH0HSTR;
extern volatile T2CH0HSTR _T2CH0H @0x00000031;
#define T2CH0H _T2CH0H.Byte
#define T2CH0H_BIT8 _T2CH0H.Bits.BIT8
#define T2CH0H_BIT9 _T2CH0H.Bits.BIT9
#define T2CH0H_BIT10 _T2CH0H.Bits.BIT10
#define T2CH0H_BIT11 _T2CH0H.Bits.BIT11
#define T2CH0H_BIT12 _T2CH0H.Bits.BIT12
#define T2CH0H_BIT13 _T2CH0H.Bits.BIT13
#define T2CH0H_BIT14 _T2CH0H.Bits.BIT14
#define T2CH0H_BIT15 _T2CH0H.Bits.BIT15
#define T2CH0H_BIT_8 _T2CH0H.MergedBits.BIT_8

/*** T2CH0L - TIM2 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM2 Channel Register  BIT 1 */
    byte BIT2    :1;           /* TIM2 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM2 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM2 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM2 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM2 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM2 Channel Register BIT 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T2CH0LSTR;
extern volatile T2CH0LSTR _T2CH0L @0x00000032;
#define T2CH0L _T2CH0L.Byte
#define T2CH0L_BIT0 _T2CH0L.Bits.BIT0
#define T2CH0L_BIT1 _T2CH0L.Bits.BIT1
#define T2CH0L_BIT2 _T2CH0L.Bits.BIT2
#define T2CH0L_BIT3 _T2CH0L.Bits.BIT3
#define T2CH0L_BIT4 _T2CH0L.Bits.BIT4
#define T2CH0L_BIT5 _T2CH0L.Bits.BIT5
#define T2CH0L_BIT6 _T2CH0L.Bits.BIT6
#define T2CH0L_BIT7 _T2CH0L.Bits.BIT7
#define T2CH0L_BIT _T2CH0L.MergedBits.BIT

/*** T2SC1 - TIM2 Channel Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte CH1MAX  :1;           /* Channel 1 Maximum Duty Cycle Bit */
    byte TOV1    :1;           /* Toggle-On-Overflow Bit */
    byte ELS1A   :1;           /* Edge/Level Select Bit */
    byte ELS1B   :1;           /* Edge/Level Select Bit */
    byte MS1A    :1;           /* Mode Select Bit A */
    byte         :1; 
    byte CH1IE   :1;           /* Channel 1 Interrupt Enable Bit */
    byte CH1F    :1;           /* Channel 1 Flag Bit */
  } Bits;
} T2SC1STR;
extern volatile T2SC1STR _T2SC1 @0x00000033;
#define T2SC1 _T2SC1.Byte
#define T2SC1_CH1MAX _T2SC1.Bits.CH1MAX
#define T2SC1_TOV1 _T2SC1.Bits.TOV1
#define T2SC1_ELS1A _T2SC1.Bits.ELS1A
#define T2SC1_ELS1B _T2SC1.Bits.ELS1B
#define T2SC1_MS1A _T2SC1.Bits.MS1A
#define T2SC1_CH1IE _T2SC1.Bits.CH1IE
#define T2SC1_CH1F _T2SC1.Bits.CH1F

/*** T2CH1H - TIM2 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* TIM2 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM2 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM2 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM2 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM2 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM2 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM2 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM2 Channel Register BIT 15 */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} T2CH1HSTR;
extern volatile T2CH1HSTR _T2CH1H @0x00000034;
#define T2CH1H _T2CH1H.Byte
#define T2CH1H_BIT8 _T2CH1H.Bits.BIT8
#define T2CH1H_BIT9 _T2CH1H.Bits.BIT9
#define T2CH1H_BIT10 _T2CH1H.Bits.BIT10
#define T2CH1H_BIT11 _T2CH1H.Bits.BIT11
#define T2CH1H_BIT12 _T2CH1H.Bits.BIT12
#define T2CH1H_BIT13 _T2CH1H.Bits.BIT13
#define T2CH1H_BIT14 _T2CH1H.Bits.BIT14
#define T2CH1H_BIT15 _T2CH1H.Bits.BIT15
#define T2CH1H_BIT_8 _T2CH1H.MergedBits.BIT_8

/*** T2CH1L - TIM2 Channel Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM2 Channel Register  BIT 1 */
    byte BIT2    :1;           /* TIM2 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM2 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM2 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM2 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM2 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM2 Channel Register BIT 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} T2CH1LSTR;
extern volatile T2CH1LSTR _T2CH1L @0x00000035;
#define T2CH1L _T2CH1L.Byte
#define T2CH1L_BIT0 _T2CH1L.Bits.BIT0
#define T2CH1L_BIT1 _T2CH1L.Bits.BIT1
#define T2CH1L_BIT2 _T2CH1L.Bits.BIT2
#define T2CH1L_BIT3 _T2CH1L.Bits.BIT3
#define T2CH1L_BIT4 _T2CH1L.Bits.BIT4
#define T2CH1L_BIT5 _T2CH1L.Bits.BIT5
#define T2CH1L_BIT6 _T2CH1L.Bits.BIT6
#define T2CH1L_BIT7 _T2CH1L.Bits.BIT7
#define T2CH1L_BIT _T2CH1L.MergedBits.BIT

/*** PCTL - PLL Bandwidth Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte VPR0    :1;           /* VCO Power-of-Two Range Select Bits */
    byte VPR1    :1;           /* VCO Power-of-Two Range Select Bits */
    byte PRE0    :1;           /* Prescaler Program Bits */
    byte PRE1    :1;           /* Prescaler Program Bits */
    byte BCS     :1;           /* Base Clock Select Bit */
    byte PLLON   :1;           /* PLL On Bit */
    byte PLLF    :1;           /* PLL Flag Bit */
    byte PLLIE   :1;           /* PLL Interrupt Enable Bit */
  } Bits;
  struct {
    byte VPR     :2;
    byte PRE     :2;
    byte BCS     :1;
    byte PLLON   :1;
    byte PLLF    :1;
    byte PLLIE   :1;
  } MergedBits;
} PCTLSTR;
extern volatile PCTLSTR _PCTL @0x00000036;
#define PCTL _PCTL.Byte
#define PCTL_VPR0 _PCTL.Bits.VPR0
#define PCTL_VPR1 _PCTL.Bits.VPR1
#define PCTL_PRE0 _PCTL.Bits.PRE0
#define PCTL_PRE1 _PCTL.Bits.PRE1
#define PCTL_BCS _PCTL.Bits.BCS
#define PCTL_PLLON _PCTL.Bits.PLLON
#define PCTL_PLLF _PCTL.Bits.PLLF
#define PCTL_PLLIE _PCTL.Bits.PLLIE
#define PCTL_VPR _PCTL.MergedBits.VPR
#define PCTL_PRE _PCTL.MergedBits.PRE

/*** PBWC - PLL Bandwidth Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte ACQ     :1;           /* Automatic Bandwidth Control Bit */
    byte LOCK    :1;           /* Lock Indicator Bit */
    byte AUTO    :1;           /* Acquisiton Mode Bit */
  } Bits;
} PBWCSTR;
extern volatile PBWCSTR _PBWC @0x00000037;
#define PBWC _PBWC.Byte
#define PBWC_ACQ _PBWC.Bits.ACQ
#define PBWC_LOCK _PBWC.Bits.LOCK
#define PBWC_AUTO _PBWC.Bits.AUTO

/*** PMSH - PLL Multiplier Select Register High ***/
typedef union {
  byte Byte;
  struct {
    byte MUL8    :1;           /* PLL Multiplier Select Bit */
    byte MUL9    :1;           /* PLL Multiplier Select Bit */
    byte MUL10   :1;           /* PLL Multiplier Select Bit */
    byte MUL11   :1;           /* PLL Multiplier Select Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte MUL_8   :4;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
  } MergedBits;
} PMSHSTR;
extern volatile PMSHSTR _PMSH @0x00000038;
#define PMSH _PMSH.Byte
#define PMSH_MUL8 _PMSH.Bits.MUL8
#define PMSH_MUL9 _PMSH.Bits.MUL9
#define PMSH_MUL10 _PMSH.Bits.MUL10
#define PMSH_MUL11 _PMSH.Bits.MUL11
#define PMSH_MUL_8 _PMSH.MergedBits.MUL_8

/*** PMSL - PLL Multiplier Select Register Low ***/
typedef union {
  byte Byte;
  struct {
    byte MUL0    :1;           /* PLL Multiplier Select Bit */
    byte MUL1    :1;           /* PLL Multiplier Select Bit */
    byte MUL2    :1;           /* PLL Multiplier Select Bit */
    byte MUL3    :1;           /* PLL Multiplier Select Bit */
    byte MUL4    :1;           /* PLL Multiplier Select Bit */
    byte MUL5    :1;           /* PLL Multiplier Select Bit */
    byte MUL6    :1;           /* PLL Multiplier Select Bit */
    byte MUL7    :1;           /* PLL Multiplier Select Bit */
  } Bits;
  struct {
    byte MUL     :8;
  } MergedBits;
} PMSLSTR;
extern volatile PMSLSTR _PMSL @0x00000039;
#define PMSL _PMSL.Byte
#define PMSL_MUL0 _PMSL.Bits.MUL0
#define PMSL_MUL1 _PMSL.Bits.MUL1
#define PMSL_MUL2 _PMSL.Bits.MUL2
#define PMSL_MUL3 _PMSL.Bits.MUL3
#define PMSL_MUL4 _PMSL.Bits.MUL4
#define PMSL_MUL5 _PMSL.Bits.MUL5
#define PMSL_MUL6 _PMSL.Bits.MUL6
#define PMSL_MUL7 _PMSL.Bits.MUL7
#define PMSL_MUL _PMSL.MergedBits.MUL

/*** PMRS - PLL VCO Range Select ***/
typedef union {
  byte Byte;
  struct {
    byte VRS0    :1;           /* VCO Range Select Bit */
    byte VRS1    :1;           /* VCO Range Select Bit */
    byte VRS2    :1;           /* VCO Range Select Bit */
    byte VRS3    :1;           /* VCO Range Select Bit */
    byte VRS4    :1;           /* VCO Range Select Bit */
    byte VRS5    :1;           /* VCO Range Select Bit */
    byte VRS6    :1;           /* VCO Range Select Bit */
    byte VRS7    :1;           /* VCO Range Select Bit */
  } Bits;
  struct {
    byte VRS     :8;
  } MergedBits;
} PMRSSTR;
extern volatile PMRSSTR _PMRS @0x0000003A;
#define PMRS _PMRS.Byte
#define PMRS_VRS0 _PMRS.Bits.VRS0
#define PMRS_VRS1 _PMRS.Bits.VRS1
#define PMRS_VRS2 _PMRS.Bits.VRS2
#define PMRS_VRS3 _PMRS.Bits.VRS3
#define PMRS_VRS4 _PMRS.Bits.VRS4
#define PMRS_VRS5 _PMRS.Bits.VRS5
#define PMRS_VRS6 _PMRS.Bits.VRS6
#define PMRS_VRS7 _PMRS.Bits.VRS7
#define PMRS_VRS _PMRS.MergedBits.VRS

/*** PMDS - PLL Reference Divider Select Register ***/
typedef union {
  byte Byte;
  struct {
    byte RDS0    :1;           /* Reference Divider Select Bit */
    byte RDS1    :1;           /* Reference Divider Select Bit */
    byte RDS2    :1;           /* Reference Divider Select Bit */
    byte RDS3    :1;           /* Reference Divider Select Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte RDS     :4;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
  } MergedBits;
} PMDSSTR;
extern volatile PMDSSTR _PMDS @0x0000003B;
#define PMDS _PMDS.Byte
#define PMDS_RDS0 _PMDS.Bits.RDS0
#define PMDS_RDS1 _PMDS.Bits.RDS1
#define PMDS_RDS2 _PMDS.Bits.RDS2
#define PMDS_RDS3 _PMDS.Bits.RDS3
#define PMDS_RDS _PMDS.MergedBits.RDS

/*** ADSCR - ADC Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte CH0     :1;           /* ADC Channel Select Bit 0 */
    byte CH1     :1;           /* ADC Channel Select Bit 1 */
    byte CH2     :1;           /* ADC Channel Select Bit 2 */
    byte CH3     :1;           /* ADC Channel Select Bit 3 */
    byte CH4     :1;           /* ADC Channel Select Bit 4 */
    byte ADCO    :1;           /* ADC Continuous Conversion Bit */
    byte AIEN    :1;           /* ADC Interrupt Enable Bit */
    byte COCO    :1;           /* Conversions Complete Bit */
  } Bits;
  struct {
    byte CH      :5;
    byte ADCO    :1;
    byte AIEN    :1;
    byte COCO    :1;
  } MergedBits;
} ADSCRSTR;
extern volatile ADSCRSTR _ADSCR @0x0000003C;
#define ADSCR _ADSCR.Byte
#define ADSCR_CH0 _ADSCR.Bits.CH0
#define ADSCR_CH1 _ADSCR.Bits.CH1
#define ADSCR_CH2 _ADSCR.Bits.CH2
#define ADSCR_CH3 _ADSCR.Bits.CH3
#define ADSCR_CH4 _ADSCR.Bits.CH4
#define ADSCR_ADCO _ADSCR.Bits.ADCO
#define ADSCR_AIEN _ADSCR.Bits.AIEN
#define ADSCR_COCO _ADSCR.Bits.COCO
#define ADSCR_CH _ADSCR.MergedBits.CH

/*** ADR - ADC Data Register ***/
typedef union {
  byte Byte;
  struct {
    byte AD0     :1;           /* ADC Data Bit 0 */
    byte AD1     :1;           /* ADC Data Bit 1 */
    byte AD2     :1;           /* ADC Data Bit 2 */
    byte AD3     :1;           /* ADC Data Bit 3 */
    byte AD4     :1;           /* ADC Data Bit 4 */
    byte AD5     :1;           /* ADC Data Bit 5 */
    byte AD6     :1;           /* ADC Data Bit 6 */
    byte AD7     :1;           /* ADC Data Bit 7 */
  } Bits;
  struct {
    byte AD      :8;
  } MergedBits;
} ADRSTR;
extern volatile ADRSTR _ADR @0x0000003D;
#define ADR _ADR.Byte
#define ADR_AD0 _ADR.Bits.AD0
#define ADR_AD1 _ADR.Bits.AD1
#define ADR_AD2 _ADR.Bits.AD2
#define ADR_AD3 _ADR.Bits.AD3
#define ADR_AD4 _ADR.Bits.AD4
#define ADR_AD5 _ADR.Bits.AD5
#define ADR_AD6 _ADR.Bits.AD6
#define ADR_AD7 _ADR.Bits.AD7
#define ADR_AD _ADR.MergedBits.AD

/*** Register ADCLK ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte ADICLK  :1;           /* ADC Input Clock Register Bit */
    byte ADIV0   :1;           /* ADC Clock Prescaler Bit 0 */
    byte ADIV1   :1;           /* ADC Clock Prescaler Bit 1 */
    byte ADIV2   :1;           /* ADC Clock Prescaler Bit 2 */
  } Bits;
  struct {
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte ADICLK  :1;
    byte ADIV    :3;
  } MergedBits;
} ADCLKSTR;
extern volatile ADCLKSTR _ADCLK @0x0000003E;
#define ADCLK _ADCLK.Byte
#define ADCLK_ADICLK _ADCLK.Bits.ADICLK
#define ADCLK_ADIV0 _ADCLK.Bits.ADIV0
#define ADCLK_ADIV1 _ADCLK.Bits.ADIV1
#define ADCLK_ADIV2 _ADCLK.Bits.ADIV2
#define ADCLK_ADIV _ADCLK.MergedBits.ADIV

/*** SBSR - SIM Break Status Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte SBSW    :1;           /* SIM Break Stop/Wait */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} SBSRSTR;
extern volatile SBSRSTR _SBSR @0x0000FE00;
#define SBSR _SBSR.Byte
#define SBSR_SBSW _SBSR.Bits.SBSW

/*** SRSR - SIM Reset Status Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte LVI     :1;           /* Low-Voltage Inhibit Reset Bit */
    byte MODRST  :1;           /* Monitor Mode Entry Module Reset Bit */
    byte ILAD    :1;           /* Illegal Address Reset Bit */
    byte ILOP    :1;           /* Illegal Opcode Reset Bit */
    byte COP     :1;           /* Computer Operating Properly Reset Bit */
    byte PIN     :1;           /* External Reset Bit */
    byte POR     :1;           /* Power-On Reset Bit */
  } Bits;
} SRSRSTR;
extern volatile SRSRSTR _SRSR @0x0000FE01;
#define SRSR _SRSR.Byte
#define SRSR_LVI _SRSR.Bits.LVI
#define SRSR_MODRST _SRSR.Bits.MODRST
#define SRSR_ILAD _SRSR.Bits.ILAD
#define SRSR_ILOP _SRSR.Bits.ILOP
#define SRSR_COP _SRSR.Bits.COP
#define SRSR_PIN _SRSR.Bits.PIN
#define SRSR_POR _SRSR.Bits.POR

/*** SBFCR - SIM Break Flag Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte BCFE    :1;           /* Break Clear Flag Enable Bit */
  } Bits;
} SBFCRSTR;
extern volatile SBFCRSTR _SBFCR @0x0000FE03;
#define SBFCR _SBFCR.Byte
#define SBFCR_BCFE _SBFCR.Bits.BCFE

/*** INT1 - Interrupt Status Register 1 ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte IF1     :1;           /* Interrupt Flag 1 */
    byte IF2     :1;           /* Interrupt Flag 2 */
    byte IF3     :1;           /* Interrupt Flag 3 */
    byte IF4     :1;           /* Interrupt Flag 4 */
    byte IF5     :1;           /* Interrupt Flag 5 */
    byte IF6     :1;           /* Interrupt Flag 6 */
  } Bits;
  struct {
    byte         :1;
    byte         :1;
    byte IF_1    :6;
  } MergedBits;
} INT1STR;
extern volatile INT1STR _INT1 @0x0000FE04;
#define INT1 _INT1.Byte
#define INT1_IF1 _INT1.Bits.IF1
#define INT1_IF2 _INT1.Bits.IF2
#define INT1_IF3 _INT1.Bits.IF3
#define INT1_IF4 _INT1.Bits.IF4
#define INT1_IF5 _INT1.Bits.IF5
#define INT1_IF6 _INT1.Bits.IF6
#define INT1_IF_1 _INT1.MergedBits.IF_1

/*** INT2 - Interrupt Status Register 2 ***/
typedef union {
  byte Byte;
  struct {
    byte IF7     :1;           /* Interrupt Flag 7 */
    byte IF8     :1;           /* Interrupt Flag 8 */
    byte IF9     :1;           /* Interrupt Flag 9 */
    byte IF10    :1;           /* Interrupt Flag 10 */
    byte IF11    :1;           /* Interrupt Flag 11 */
    byte IF12    :1;           /* Interrupt Flag 12 */
    byte IF13    :1;           /* Interrupt Flag 13 */
    byte IF14    :1;           /* Interrupt Flag 14 */
  } Bits;
  struct {
    byte IF_7    :8;
  } MergedBits;
} INT2STR;
extern volatile INT2STR _INT2 @0x0000FE05;
#define INT2 _INT2.Byte
#define INT2_IF7 _INT2.Bits.IF7
#define INT2_IF8 _INT2.Bits.IF8
#define INT2_IF9 _INT2.Bits.IF9
#define INT2_IF10 _INT2.Bits.IF10
#define INT2_IF11 _INT2.Bits.IF11
#define INT2_IF12 _INT2.Bits.IF12
#define INT2_IF13 _INT2.Bits.IF13
#define INT2_IF14 _INT2.Bits.IF14
#define INT2_IF_7 _INT2.MergedBits.IF_7

/*** INT3 - Interrupt Status Register 3 ***/
typedef union {
  byte Byte;
  struct {
    byte IF15    :1;           /* Interrupt Flag 15 */
    byte IF16    :1;           /* Interrupt Flag 16 */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    byte IF1_5   :2;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
    byte         :1;
  } MergedBits;
} INT3STR;
extern volatile INT3STR _INT3 @0x0000FE06;
#define INT3 _INT3.Byte
#define INT3_IF15 _INT3.Bits.IF15
#define INT3_IF16 _INT3.Bits.IF16
#define INT3_IF1_5 _INT3.MergedBits.IF1_5

/*** FLCR1 - FLASH1 Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte PGM     :1;           /* Program Control Bit */
    byte ERASE   :1;           /* Erase Control Bit */
    byte MARGIN  :1;           /* Margin Read Control Bit */
    byte HVEN    :1;           /* High-Voltage Enable Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
} FLCR1STR;
extern volatile FLCR1STR _FLCR1 @0x0000FE08;
#define FLCR1 _FLCR1.Byte
#define FLCR1_PGM _FLCR1.Bits.PGM
#define FLCR1_ERASE _FLCR1.Bits.ERASE
#define FLCR1_MARGIN _FLCR1.Bits.MARGIN
#define FLCR1_HVEN _FLCR1.Bits.HVEN

/*** BRKH - Break Address Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT8    :1;           /* Break Address Register Bit */
    byte BIT9    :1;           /* Break Address Register Bit */
    byte BIT10   :1;           /* Break Address Register Bit */
    byte BIT11   :1;           /* Break Address Register Bit */
    byte BIT12   :1;           /* Break Address Register Bit */
    byte BIT13   :1;           /* Break Address Register Bit */
    byte BIT14   :1;           /* Break Address Register Bit */
    byte BIT15   :1;           /* Break Address Register Bit */
  } Bits;
  struct {
    byte BIT_8   :8;
  } MergedBits;
} BRKHSTR;
extern volatile BRKHSTR _BRKH @0x0000FE09;
#define BRKH _BRKH.Byte
#define BRKH_BIT8 _BRKH.Bits.BIT8
#define BRKH_BIT9 _BRKH.Bits.BIT9
#define BRKH_BIT10 _BRKH.Bits.BIT10
#define BRKH_BIT11 _BRKH.Bits.BIT11
#define BRKH_BIT12 _BRKH.Bits.BIT12
#define BRKH_BIT13 _BRKH.Bits.BIT13
#define BRKH_BIT14 _BRKH.Bits.BIT14
#define BRKH_BIT15 _BRKH.Bits.BIT15
#define BRKH_BIT_8 _BRKH.MergedBits.BIT_8

/*** BRKSCR - Break Status and Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte BRKA    :1;           /* Break Active Bit */
    byte BRKE    :1;           /* Break Enable Bit */
  } Bits;
} BRKSCRSTR;
extern volatile BRKSCRSTR _BRKSCR @0x0000FE0B;
#define BRKSCR _BRKSCR.Byte
#define BRKSCR_BRKA _BRKSCR.Bits.BRKA
#define BRKSCR_BRKE _BRKSCR.Bits.BRKE

/*** LVISR - LVI Status Register ***/
typedef union {
  byte Byte;
  struct {
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte LVIOUT  :1;           /* LVI Output Bit */
  } Bits;
} LVISRSTR;
extern volatile LVISRSTR _LVISR @0x0000FE0C;
#define LVISR _LVISR.Byte
#define LVISR_LVIOUT _LVISR.Bits.LVIOUT

/*** BRKL - Break Address Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* Break Address Register Bit */
    byte BIT1    :1;           /* Break Address Register Bit */
    byte BIT2    :1;           /* Break Address Register Bit */
    byte BIT3    :1;           /* Break Address Register Bit */
    byte BIT4    :1;           /* Break Address Register Bit */
    byte BIT5    :1;           /* Break Address Register Bit */
    byte BIT6    :1;           /* Break Address Register Bit */
    byte BIT7    :1;           /* Break Address Register Bit */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} BRKLSTR;
extern volatile BRKLSTR _BRKL @0x0000FE0D;
#define BRKL _BRKL.Byte
#define BRKL_BIT0 _BRKL.Bits.BIT0
#define BRKL_BIT1 _BRKL.Bits.BIT1
#define BRKL_BIT2 _BRKL.Bits.BIT2
#define BRKL_BIT3 _BRKL.Bits.BIT3
#define BRKL_BIT4 _BRKL.Bits.BIT4
#define BRKL_BIT5 _BRKL.Bits.BIT5
#define BRKL_BIT6 _BRKL.Bits.BIT6
#define BRKL_BIT7 _BRKL.Bits.BIT7
#define BRKL_BIT _BRKL.MergedBits.BIT

/*** FLBPR - FLASH1 Block Protect Register ***/
typedef union {
  byte Byte;
  struct {
    byte BPR0    :1;           /* Block Protect Register Bit 0 */
    byte BPR1    :1;           /* Block Protect Register Bit 1 */
    byte BPR2    :1;           /* Block Protect Register Bit 2 */
    byte BPR3    :1;           /* Block Protect Register Bit 3 */
    byte BPR4    :1;           /* Block Protect Register Bit 4 */
    byte BPR5    :1;           /* Block Protect Register Bit 5 */
    byte BPR6    :1;           /* Block Protect Register Bit 6 */
    byte BPR7    :1;           /* Block Protect Register Bit 7 */
  } Bits;
  struct {
    byte BPR     :8;
  } MergedBits;
} FLBPRSTR;
extern volatile FLBPRSTR _FLBPR @0x0000FF7E;
#define FLBPR _FLBPR.Byte
#define FLBPR_BPR0 _FLBPR.Bits.BPR0
#define FLBPR_BPR1 _FLBPR.Bits.BPR1
#define FLBPR_BPR2 _FLBPR.Bits.BPR2
#define FLBPR_BPR3 _FLBPR.Bits.BPR3
#define FLBPR_BPR4 _FLBPR.Bits.BPR4
#define FLBPR_BPR5 _FLBPR.Bits.BPR5
#define FLBPR_BPR6 _FLBPR.Bits.BPR6
#define FLBPR_BPR7 _FLBPR.Bits.BPR7
#define FLBPR_BPR _FLBPR.MergedBits.BPR

/*** COPCTL - COP Control Register ***/
typedef union {
  byte Byte;
  struct {
    byte BIT0    :1;           /* Bit 0 */
    byte BIT1    :1;           /* Bit 1 */
    byte BIT2    :1;           /* Bit 2 */
    byte BIT3    :1;           /* Bit 3 */
    byte BIT4    :1;           /* Bit 4 */
    byte BIT5    :1;           /* Bit 5 */
    byte BIT6    :1;           /* Bit 6 */
    byte BIT7    :1;           /* Bit 7 */
  } Bits;
  struct {
    byte BIT     :8;
  } MergedBits;
} COPCTLSTR;
extern volatile COPCTLSTR _COPCTL @0x1000FFFF;
#define COPCTL _COPCTL.Byte
#define COPCTL_BIT0 _COPCTL.Bits.BIT0
#define COPCTL_BIT1 _COPCTL.Bits.BIT1
#define COPCTL_BIT2 _COPCTL.Bits.BIT2
#define COPCTL_BIT3 _COPCTL.Bits.BIT3
#define COPCTL_BIT4 _COPCTL.Bits.BIT4
#define COPCTL_BIT5 _COPCTL.Bits.BIT5
#define COPCTL_BIT6 _COPCTL.Bits.BIT6
#define COPCTL_BIT7 _COPCTL.Bits.BIT7
#define COPCTL_BIT _COPCTL.MergedBits.BIT

/*** T1CNT - TIM1 Counter Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Counter Bit */
    byte BIT1    :1;           /* TIM1 Counter Bit */
    byte BIT2    :1;           /* TIM1 Counter Bit */
    byte BIT3    :1;           /* TIM1 Counter Bit */
    byte BIT4    :1;           /* TIM1 Counter Bit */
    byte BIT5    :1;           /* TIM1 Counter Bit */
    byte BIT6    :1;           /* TIM1 Counter Bit */
    byte BIT7    :1;           /* TIM1 Counter Bit */
    byte BIT8    :1;           /* TIM1 Counter Bit */
    byte BIT9    :1;           /* TIM1 Counter Bit */
    byte BIT10   :1;           /* TIM1 Counter Bit */
    byte BIT11   :1;           /* TIM1 Counter Bit */
    byte BIT12   :1;           /* TIM1 Counter Bit */
    byte BIT13   :1;           /* TIM1 Counter Bit */
    byte BIT14   :1;           /* TIM1 Counter Bit */
    byte BIT15   :1;           /* TIM1 Counter Bit */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T1CNTSTR;
extern volatile T1CNTSTR _T1CNT @0x00000021;
#define T1CNT _T1CNT.Byte
#define T1CNT_BIT0 _T1CNT.Bits.BIT0
#define T1CNT_BIT1 _T1CNT.Bits.BIT1
#define T1CNT_BIT2 _T1CNT.Bits.BIT2
#define T1CNT_BIT3 _T1CNT.Bits.BIT3
#define T1CNT_BIT4 _T1CNT.Bits.BIT4
#define T1CNT_BIT5 _T1CNT.Bits.BIT5
#define T1CNT_BIT6 _T1CNT.Bits.BIT6
#define T1CNT_BIT7 _T1CNT.Bits.BIT7
#define T1CNT_BIT8 _T1CNT.Bits.BIT8
#define T1CNT_BIT9 _T1CNT.Bits.BIT9
#define T1CNT_BIT10 _T1CNT.Bits.BIT10
#define T1CNT_BIT11 _T1CNT.Bits.BIT11
#define T1CNT_BIT12 _T1CNT.Bits.BIT12
#define T1CNT_BIT13 _T1CNT.Bits.BIT13
#define T1CNT_BIT14 _T1CNT.Bits.BIT14
#define T1CNT_BIT15 _T1CNT.Bits.BIT15
#define T1CNT_BIT _T1CNT.MergedBits.BIT

/*** T1MOD - TIM1 Counter Modulo Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT1    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT2    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT3    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT4    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT5    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT6    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT7    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT8    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT9    :1;           /* TIM1 Counter Modulo Bit */
    byte BIT10   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT11   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT12   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT13   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT14   :1;           /* TIM1 Counter Modulo Bit */
    byte BIT15   :1;           /* TIM1 Counter Modulo Bit */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T1MODSTR;
extern volatile T1MODSTR _T1MOD @0x00000023;
#define T1MOD _T1MOD.Byte
#define T1MOD_BIT0 _T1MOD.Bits.BIT0
#define T1MOD_BIT1 _T1MOD.Bits.BIT1
#define T1MOD_BIT2 _T1MOD.Bits.BIT2
#define T1MOD_BIT3 _T1MOD.Bits.BIT3
#define T1MOD_BIT4 _T1MOD.Bits.BIT4
#define T1MOD_BIT5 _T1MOD.Bits.BIT5
#define T1MOD_BIT6 _T1MOD.Bits.BIT6
#define T1MOD_BIT7 _T1MOD.Bits.BIT7
#define T1MOD_BIT8 _T1MOD.Bits.BIT8
#define T1MOD_BIT9 _T1MOD.Bits.BIT9
#define T1MOD_BIT10 _T1MOD.Bits.BIT10
#define T1MOD_BIT11 _T1MOD.Bits.BIT11
#define T1MOD_BIT12 _T1MOD.Bits.BIT12
#define T1MOD_BIT13 _T1MOD.Bits.BIT13
#define T1MOD_BIT14 _T1MOD.Bits.BIT14
#define T1MOD_BIT15 _T1MOD.Bits.BIT15
#define T1MOD_BIT _T1MOD.MergedBits.BIT

/*** T1CH0 - TIM1 Channel Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM1 Channel Register BIT 1 */
    byte BIT2    :1;           /* TIM1 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM1 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM1 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM1 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM1 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM1 Channel Register BIT 7 */
    byte BIT8    :1;           /* TIM1 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM1 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM1 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM1 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM1 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM1 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM1 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM1 Channel Register BIT 15 */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T1CH0STR;
extern volatile T1CH0STR _T1CH0 @0x00000026;
#define T1CH0 _T1CH0.Byte
#define T1CH0_BIT0 _T1CH0.Bits.BIT0
#define T1CH0_BIT1 _T1CH0.Bits.BIT1
#define T1CH0_BIT2 _T1CH0.Bits.BIT2
#define T1CH0_BIT3 _T1CH0.Bits.BIT3
#define T1CH0_BIT4 _T1CH0.Bits.BIT4
#define T1CH0_BIT5 _T1CH0.Bits.BIT5
#define T1CH0_BIT6 _T1CH0.Bits.BIT6
#define T1CH0_BIT7 _T1CH0.Bits.BIT7
#define T1CH0_BIT8 _T1CH0.Bits.BIT8
#define T1CH0_BIT9 _T1CH0.Bits.BIT9
#define T1CH0_BIT10 _T1CH0.Bits.BIT10
#define T1CH0_BIT11 _T1CH0.Bits.BIT11
#define T1CH0_BIT12 _T1CH0.Bits.BIT12
#define T1CH0_BIT13 _T1CH0.Bits.BIT13
#define T1CH0_BIT14 _T1CH0.Bits.BIT14
#define T1CH0_BIT15 _T1CH0.Bits.BIT15
#define T1CH0_BIT _T1CH0.MergedBits.BIT

/*** T1CH1 - TIM1 Channel Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM1 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM1 Channel Register BIT 1 */
    byte BIT2    :1;           /* TIM1 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM1 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM1 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM1 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM1 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM1 Channel Register BIT 7 */
    byte BIT8    :1;           /* TIM1 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM1 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM1 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM1 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM1 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM1 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM1 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM1 Channel Register BIT 15 */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T1CH1STR;
extern volatile T1CH1STR _T1CH1 @0x00000029;
#define T1CH1 _T1CH1.Byte
#define T1CH1_BIT0 _T1CH1.Bits.BIT0
#define T1CH1_BIT1 _T1CH1.Bits.BIT1
#define T1CH1_BIT2 _T1CH1.Bits.BIT2
#define T1CH1_BIT3 _T1CH1.Bits.BIT3
#define T1CH1_BIT4 _T1CH1.Bits.BIT4
#define T1CH1_BIT5 _T1CH1.Bits.BIT5
#define T1CH1_BIT6 _T1CH1.Bits.BIT6
#define T1CH1_BIT7 _T1CH1.Bits.BIT7
#define T1CH1_BIT8 _T1CH1.Bits.BIT8
#define T1CH1_BIT9 _T1CH1.Bits.BIT9
#define T1CH1_BIT10 _T1CH1.Bits.BIT10
#define T1CH1_BIT11 _T1CH1.Bits.BIT11
#define T1CH1_BIT12 _T1CH1.Bits.BIT12
#define T1CH1_BIT13 _T1CH1.Bits.BIT13
#define T1CH1_BIT14 _T1CH1.Bits.BIT14
#define T1CH1_BIT15 _T1CH1.Bits.BIT15
#define T1CH1_BIT _T1CH1.MergedBits.BIT

/*** T2CNT - TIM2 Counter Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Counter Bit */
    byte BIT1    :1;           /* TIM2 Counter Bit */
    byte BIT2    :1;           /* TIM2 Counter Bit */
    byte BIT3    :1;           /* TIM2 Counter Bit */
    byte BIT4    :1;           /* TIM2 Counter Bit */
    byte BIT5    :1;           /* TIM2 Counter Bit */
    byte BIT6    :1;           /* TIM2 Counter Bit */
    byte BIT7    :1;           /* TIM2 Counter Bit */
    byte BIT8    :1;           /* TIM2 Counter Bit */
    byte BIT9    :1;           /* TIM2 Counter Bit */
    byte BIT10   :1;           /* TIM2 Counter Bit */
    byte BIT11   :1;           /* TIM2 Counter Bit */
    byte BIT12   :1;           /* TIM2 Counter Bit */
    byte BIT13   :1;           /* TIM2 Counter Bit */
    byte BIT14   :1;           /* TIM2 Counter Bit */
    byte BIT15   :1;           /* TIM2 Counter Bit */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T2CNTSTR;
extern volatile T2CNTSTR _T2CNT @0x0000002C;
#define T2CNT _T2CNT.Byte
#define T2CNT_BIT0 _T2CNT.Bits.BIT0
#define T2CNT_BIT1 _T2CNT.Bits.BIT1
#define T2CNT_BIT2 _T2CNT.Bits.BIT2
#define T2CNT_BIT3 _T2CNT.Bits.BIT3
#define T2CNT_BIT4 _T2CNT.Bits.BIT4
#define T2CNT_BIT5 _T2CNT.Bits.BIT5
#define T2CNT_BIT6 _T2CNT.Bits.BIT6
#define T2CNT_BIT7 _T2CNT.Bits.BIT7
#define T2CNT_BIT8 _T2CNT.Bits.BIT8
#define T2CNT_BIT9 _T2CNT.Bits.BIT9
#define T2CNT_BIT10 _T2CNT.Bits.BIT10
#define T2CNT_BIT11 _T2CNT.Bits.BIT11
#define T2CNT_BIT12 _T2CNT.Bits.BIT12
#define T2CNT_BIT13 _T2CNT.Bits.BIT13
#define T2CNT_BIT14 _T2CNT.Bits.BIT14
#define T2CNT_BIT15 _T2CNT.Bits.BIT15
#define T2CNT_BIT _T2CNT.MergedBits.BIT

/*** T2MOD - TIM2 Counter Modulo Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT1    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT2    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT3    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT4    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT5    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT6    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT7    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT8    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT9    :1;           /* TIM2 Counter Modulo Bit */
    byte BIT10   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT11   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT12   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT13   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT14   :1;           /* TIM2 Counter Modulo Bit */
    byte BIT15   :1;           /* TIM2 Counter Modulo Bit */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T2MODSTR;
extern volatile T2MODSTR _T2MOD @0x0000002E;
#define T2MOD _T2MOD.Byte
#define T2MOD_BIT0 _T2MOD.Bits.BIT0
#define T2MOD_BIT1 _T2MOD.Bits.BIT1
#define T2MOD_BIT2 _T2MOD.Bits.BIT2
#define T2MOD_BIT3 _T2MOD.Bits.BIT3
#define T2MOD_BIT4 _T2MOD.Bits.BIT4
#define T2MOD_BIT5 _T2MOD.Bits.BIT5
#define T2MOD_BIT6 _T2MOD.Bits.BIT6
#define T2MOD_BIT7 _T2MOD.Bits.BIT7
#define T2MOD_BIT8 _T2MOD.Bits.BIT8
#define T2MOD_BIT9 _T2MOD.Bits.BIT9
#define T2MOD_BIT10 _T2MOD.Bits.BIT10
#define T2MOD_BIT11 _T2MOD.Bits.BIT11
#define T2MOD_BIT12 _T2MOD.Bits.BIT12
#define T2MOD_BIT13 _T2MOD.Bits.BIT13
#define T2MOD_BIT14 _T2MOD.Bits.BIT14
#define T2MOD_BIT15 _T2MOD.Bits.BIT15
#define T2MOD_BIT _T2MOD.MergedBits.BIT

/*** T2CH0 - TIM2 Channel Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM2 Channel Register  BIT 1 */
    byte BIT2    :1;           /* TIM2 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM2 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM2 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM2 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM2 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM2 Channel Register BIT 7 */
    byte BIT8    :1;           /* TIM2 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM2 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM2 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM2 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM2 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM2 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM2 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM2 Channel Register BIT 15 */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T2CH0STR;
extern volatile T2CH0STR _T2CH0 @0x00000031;
#define T2CH0 _T2CH0.Byte
#define T2CH0_BIT0 _T2CH0.Bits.BIT0
#define T2CH0_BIT1 _T2CH0.Bits.BIT1
#define T2CH0_BIT2 _T2CH0.Bits.BIT2
#define T2CH0_BIT3 _T2CH0.Bits.BIT3
#define T2CH0_BIT4 _T2CH0.Bits.BIT4
#define T2CH0_BIT5 _T2CH0.Bits.BIT5
#define T2CH0_BIT6 _T2CH0.Bits.BIT6
#define T2CH0_BIT7 _T2CH0.Bits.BIT7
#define T2CH0_BIT8 _T2CH0.Bits.BIT8
#define T2CH0_BIT9 _T2CH0.Bits.BIT9
#define T2CH0_BIT10 _T2CH0.Bits.BIT10
#define T2CH0_BIT11 _T2CH0.Bits.BIT11
#define T2CH0_BIT12 _T2CH0.Bits.BIT12
#define T2CH0_BIT13 _T2CH0.Bits.BIT13
#define T2CH0_BIT14 _T2CH0.Bits.BIT14
#define T2CH0_BIT15 _T2CH0.Bits.BIT15
#define T2CH0_BIT _T2CH0.MergedBits.BIT

/*** T2CH1 - TIM2 Channel Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* TIM2 Channel Register BIT 0 */
    byte BIT1    :1;           /* TIM2 Channel Register  BIT 1 */
    byte BIT2    :1;           /* TIM2 Channel Register BIT 2 */
    byte BIT3    :1;           /* TIM2 Channel Register BIT 3 */
    byte BIT4    :1;           /* TIM2 Channel Register BIT 4 */
    byte BIT5    :1;           /* TIM2 Channel Register BIT 5 */
    byte BIT6    :1;           /* TIM2 Channel Register BIT 6 */
    byte BIT7    :1;           /* TIM2 Channel Register BIT 7 */
    byte BIT8    :1;           /* TIM2 Channel Register BIT 8 */
    byte BIT9    :1;           /* TIM2 Channel Register BIT 9 */
    byte BIT10   :1;           /* TIM2 Channel Register BIT 10 */
    byte BIT11   :1;           /* TIM2 Channel Register BIT 11 */
    byte BIT12   :1;           /* TIM2 Channel Register BIT 12 */
    byte BIT13   :1;           /* TIM2 Channel Register BIT 13 */
    byte BIT14   :1;           /* TIM2 Channel Register BIT 14 */
    byte BIT15   :1;           /* TIM2 Channel Register BIT 15 */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} T2CH1STR;
extern volatile T2CH1STR _T2CH1 @0x00000034;
#define T2CH1 _T2CH1.Byte
#define T2CH1_BIT0 _T2CH1.Bits.BIT0
#define T2CH1_BIT1 _T2CH1.Bits.BIT1
#define T2CH1_BIT2 _T2CH1.Bits.BIT2
#define T2CH1_BIT3 _T2CH1.Bits.BIT3
#define T2CH1_BIT4 _T2CH1.Bits.BIT4
#define T2CH1_BIT5 _T2CH1.Bits.BIT5
#define T2CH1_BIT6 _T2CH1.Bits.BIT6
#define T2CH1_BIT7 _T2CH1.Bits.BIT7
#define T2CH1_BIT8 _T2CH1.Bits.BIT8
#define T2CH1_BIT9 _T2CH1.Bits.BIT9
#define T2CH1_BIT10 _T2CH1.Bits.BIT10
#define T2CH1_BIT11 _T2CH1.Bits.BIT11
#define T2CH1_BIT12 _T2CH1.Bits.BIT12
#define T2CH1_BIT13 _T2CH1.Bits.BIT13
#define T2CH1_BIT14 _T2CH1.Bits.BIT14
#define T2CH1_BIT15 _T2CH1.Bits.BIT15
#define T2CH1_BIT _T2CH1.MergedBits.BIT

/*** PMS - PLL Multiplier Select Register ***/
typedef union {
  word Byte;
  struct {
    byte MUL0    :1;           /* PLL Multiplier Select Bit */
    byte MUL1    :1;           /* PLL Multiplier Select Bit */
    byte MUL2    :1;           /* PLL Multiplier Select Bit */
    byte MUL3    :1;           /* PLL Multiplier Select Bit */
    byte MUL4    :1;           /* PLL Multiplier Select Bit */
    byte MUL5    :1;           /* PLL Multiplier Select Bit */
    byte MUL6    :1;           /* PLL Multiplier Select Bit */
    byte MUL7    :1;           /* PLL Multiplier Select Bit */
    byte MUL8    :1;           /* PLL Multiplier Select Bit */
    byte MUL9    :1;           /* PLL Multiplier Select Bit */
    byte MUL10   :1;           /* PLL Multiplier Select Bit */
    byte MUL11   :1;           /* PLL Multiplier Select Bit */
    byte         :1; 
    byte         :1; 
    byte         :1; 
    byte         :1; 
  } Bits;
  struct {
    word MUL     :12;
    word         :1;
    word         :1;
    word         :1;
    word         :1;
  } MergedBits;
} PMSSTR;
extern volatile PMSSTR _PMS @0x00000038;
#define PMS _PMS.Byte
#define PMS_MUL0 _PMS.Bits.MUL0
#define PMS_MUL1 _PMS.Bits.MUL1
#define PMS_MUL2 _PMS.Bits.MUL2
#define PMS_MUL3 _PMS.Bits.MUL3
#define PMS_MUL4 _PMS.Bits.MUL4
#define PMS_MUL5 _PMS.Bits.MUL5
#define PMS_MUL6 _PMS.Bits.MUL6
#define PMS_MUL7 _PMS.Bits.MUL7
#define PMS_MUL8 _PMS.Bits.MUL8
#define PMS_MUL9 _PMS.Bits.MUL9
#define PMS_MUL10 _PMS.Bits.MUL10
#define PMS_MUL11 _PMS.Bits.MUL11
#define PMS_MUL _PMS.MergedBits.MUL

/*** BRK - Break Address Register ***/
typedef union {
  word Byte;
  struct {
    byte BIT0    :1;           /* Break Address Register Bit */
    byte BIT1    :1;           /* Break Address Register Bit */
    byte BIT2    :1;           /* Break Address Register Bit */
    byte BIT3    :1;           /* Break Address Register Bit */
    byte BIT4    :1;           /* Break Address Register Bit */
    byte BIT5    :1;           /* Break Address Register Bit */
    byte BIT6    :1;           /* Break Address Register Bit */
    byte BIT7    :1;           /* Break Address Register Bit */
    byte BIT8    :1;           /* Break Address Register Bit */
    byte BIT9    :1;           /* Break Address Register Bit */
    byte BIT10   :1;           /* Break Address Register Bit */
    byte BIT11   :1;           /* Break Address Register Bit */
    byte BIT12   :1;           /* Break Address Register Bit */
    byte BIT13   :1;           /* Break Address Register Bit */
    byte BIT14   :1;           /* Break Address Register Bit */
    byte BIT15   :1;           /* Break Address Register Bit */
  } Bits;
  struct {
    word BIT     :16;
  } MergedBits;
} BRKSTR;
extern volatile BRKSTR _BRK @0x0000FE0C;
#define BRK _BRK.Byte
#define BRK_BIT0 _BRK.Bits.BIT0
#define BRK_BIT1 _BRK.Bits.BIT1
#define BRK_BIT2 _BRK.Bits.BIT2
#define BRK_BIT3 _BRK.Bits.BIT3
#define BRK_BIT4 _BRK.Bits.BIT4
#define BRK_BIT5 _BRK.Bits.BIT5
#define BRK_BIT6 _BRK.Bits.BIT6
#define BRK_BIT7 _BRK.Bits.BIT7
#define BRK_BIT8 _BRK.Bits.BIT8
#define BRK_BIT9 _BRK.Bits.BIT9
#define BRK_BIT10 _BRK.Bits.BIT10
#define BRK_BIT11 _BRK.Bits.BIT11
#define BRK_BIT12 _BRK.Bits.BIT12
#define BRK_BIT13 _BRK.Bits.BIT13
#define BRK_BIT14 _BRK.Bits.BIT14
#define BRK_BIT15 _BRK.Bits.BIT15
#define BRK_BIT _BRK.MergedBits.BIT

/* ---------------------------------------------------------------------------------------------------
Exceptions in bit names of timer status and control registers (TASC, TSC, TBSC) for every channel 
due to backward compatibility with HC08 AZx versions  */
#define T1SC0_CHxMAX _T1SC0.Bits.CH0MAX
#define T1SC0_TOVx _T1SC0.Bits.TOV0
#define T1SC0_ELSxA _T1SC0.Bits.ELS0A
#define T1SC0_ELSxB _T1SC0.Bits.ELS0B
#define T1SC0_MSxA _T1SC0.Bits.MS0A
#define T1SC0_MSxB _T1SC0.Bits.MS0B
#define T1SC0_CHxIE _T1SC0.Bits.CH0IE
#define T1SC0_CHxF _T1SC0.Bits.CH0F

#define T1SC1_CHxMAX _T1SC1.Bits.CH1MAX
#define T1SC1_TOVx _T1SC1.Bits.TOV1
#define T1SC1_ELSxA _T1SC1.Bits.ELS1A
#define T1SC1_ELSxB _T1SC1.Bits.ELS1B
#define T1SC1_MSxA _T1SC1.Bits.MS1A
#define T1SC1_CHxIE _T1SC1.Bits.CH1IE
#define T1SC1_CHxF _T1SC1.Bits.CH1F

#define T2SC0_CHxMAX _T2SC0.Bits.CH0MAX
#define T2SC0_TOVx _T2SC0.Bits.TOV0
#define T2SC0_ELSxA _T2SC0.Bits.ELS0A
#define T2SC0_ELSxB _T2SC0.Bits.ELS0B
#define T2SC0_MSxA _T2SC0.Bits.MS0A
#define T2SC0_MSxB _T2SC0.Bits.MS0B
#define T2SC0_CHxIE _T2SC0.Bits.CH0IE
#define T2SC0_CHxF _T2SC0.Bits.CH0F

#define T2SC1_CHxMAX _T2SC1.Bits.CH1MAX
#define T2SC1_TOVx _T2SC1.Bits.TOV1
#define T2SC1_ELSxA _T2SC1.Bits.ELS1A
#define T2SC1_ELSxB _T2SC1.Bits.ELS1B
#define T2SC1_MSxA _T2SC1.Bits.MS1A
#define T2SC1_CHxIE _T2SC1.Bits.CH1IE
#define T2SC1_CHxF _T2SC1.Bits.CH1F
#endif

/*
** ###################################################################
**
**     This file was created by UNIS Processor Expert 02.89 for 
**     the Motorola HC08 series of microcontrollers.
**
** ###################################################################
*/

