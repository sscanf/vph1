ANSI-C/cC++ Compiler for HC08 V-5.0.15, Apr 11 2002

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : TIMER.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : TimerInt
   13:  **
   14:  **     Version   : Bean 02.055, Driver 01.10, CPU db: 2.87.041
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler V-5.0.13
   17:  **
   18:  **     Date/Time : 6/27/viernes, 13:06
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "TimerInt" implements a periodic interrupt.
   23:  **         When the bean and its events are enabled, the "OnInterrupt"
   24:  **         event is called periodically with the period that you specify.
   25:  **         TimerInt supports also changing the period in runtime.
   26:  **         The source of periodic interrupt can be timer compare or reload 
   27:  **         register or timer-overflow interrupt (of free running counter).
   28:  **
   29:  **     Settings  :
   30:  **
   31:  **         Timer name                  : TIM2 (16-bit)
   32:  **         Compare name                : TIM21
   33:  **         Counter shared              : No
   34:  **
   35:  **         High-speed CPU mode
   36:  **             Prescaler               : divide-by-1
   37:  **             Clock                   : 4915200 Hz
   38:  **           Initial period/frequency
   39:  **             Xtal ticks              : 33
   40:  **             microseconds            : 1000
   41:  **             milliseconds            : 1
   42:  **             seconds (real)          : 0.0010000
   43:  **             Hz                      : 1000
   44:  **             kHz                     : 1
   45:  **
   46:  **         Runtime setting             : none
   47:  **
   48:  **         Initialization:
   49:  **              Timer                  : Disabled
   50:  **              Events                 : Enabled
   51:  **
   52:  **         Timer registers
   53:  **              Counter                : T2CNT     [44]
   54:  **              Mode                   : T2SC      [43]
   55:  **              Run                    : T2SC      [43]
   56:  **              Prescaler              : T2SC      [43]
   57:  **
   58:  **         Compare registers
   59:  **              Compare                : T2CH1     [52]
   60:  **
   61:  **         Flip-flop registers
   62:  **              Mode                   : T2SC1     [51]
   63:  **
   64:  **     Contents  :
   65:  **
   66:  **         Enable  - byte TIMER_Enable(void);
   67:  **         Disable - byte TIMER_Disable(void);
   68:  **
   69:  **
   70:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   71:  **
   72:  **     UNIS, spol. s r.o.
   73:  **     Jundrovska 33
   74:  **     624 00 Brno
   75:  **     Czech Republic
   76:  **
   77:  **     http      : www.processorexpert.com
   78:  **     mail      : info@processorexpert.com
   79:  **
   80:  ** ###################################################################
   81:  */
   82:  
   83:  
   84:  /* MODULE TIMER. */
   85:  
   86:  #include "Events.h"
   87:  #include "PE_Error.h"
   88:  #include "TIMER.h"
   89:  
   90:  #pragma MESSAGE DISABLE C2705          /* WARNING C2705: Possible loss of data */
   91:  #pragma MESSAGE DISABLE C5919          /* WARNING C5919: Conversion of floating to unsigned integral */
   92:  
   93:  static bool EnUser;                    /* Enable/Disable device by user */
   94:  
   95:  
   96:  /*
   97:  ** ===================================================================
   98:  **     Method      :  TIMER_SetCV (bean TimerInt)
   99:  **
  100:  **     Description :
  101:  **         This method is internal. It is used by Processor Expert
  102:  **         only.
  103:  ** ===================================================================
  104:  */
  105:  static void SetCV(word Val)
  106:  {

Function: SetCV
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  107:    T2CH1H = (*(TWREG*)&Val).b.high;     /* Store given value to the compare register */
  0000 bf00             STX   _T2CH1H
  108:    T2MODH = (*(TWREG*)&Val).b.high;     /* and to the modulo register */
  0002 bf00             STX   _T2MODH
  109:    T2CH1L = (*(TWREG*)&Val).b.low;
  0004 b700             STA   _T2CH1L
  110:    T2MODL = (*(TWREG*)&Val).b.low;
  0006 b700             STA   _T2MODL
  111:  }
  0008 81               RTS   
  112:  
  113:  /*
  114:  ** ===================================================================
  115:  **     Method      :  TIMER_SetPV (bean TimerInt)
  116:  **
  117:  **     Description :
  118:  **         This method is internal. It is used by Processor Expert
  119:  **         only.
  120:  ** ===================================================================
  121:  */
  122:  static void SetPV(byte Val)
  123:  {

Function: SetPV
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  0000 87               PSHA  
  124:    T2SC_PS = Val;                       /* Store given value to the prescaler */
  0001 b600             LDA   _T2SC
  0003 87               PSHA  
  0004 95               TSX   
  0005 e801             EOR   1,X
  0007 a407             AND   #7
  0009 f8               EOR   ,X
  000a b700             STA   _T2SC
  125:    T2SC_TRST = 1;                       /* Reset counter */
  000c 1800             BSET  4,_T2SC
  126:  }
  000e a702             AIS   #2
  0010 81               RTS   
  127:  
  128:  /*
  129:  ** ===================================================================
  130:  **     Method      :  TIMER_HWEnDi (bean TimerInt)
  131:  **
  132:  **     Description :
  133:  **         This method is internal. It is used by Processor Expert
  134:  **         only.
  135:  ** ===================================================================
  136:  */
  137:  static void HWEnDi(void)
  138:  {

Function: HWEnDi
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  139:    if (EnUser) {                        /* Enable device? */
  0000 c60000           LDA   EnUser
  0003 2703             BEQ   L8 ;abs = 0008
  140:      T2SC_TSTOP = 0;                    /* Run counter */
  0005 1b00             BCLR  5,_T2SC
  141:    }
  0007 81               RTS   
  0008          L8:     
  142:    else {                               /* Disable device? */
  143:      T2SC_TSTOP = 1;                    /* Stop counter */
  0008 1a00             BSET  5,_T2SC
  144:      T2SC_TRST = 1;                     /* Reset counter */
  000a 1800             BSET  4,_T2SC
  145:    }
  146:  }
  000c 81               RTS   
  147:  
  148:  /*
  149:  ** ===================================================================
  150:  **     Method      :  TIMER_Enable (bean TimerInt)
  151:  **
  152:  **     Description :
  153:  **         Enable the bean - it starts the timer. Events may be
  154:  **         generated ("DisableEvent"/"EnableEvent").
  155:  **     Parameters  : None
  156:  **     Returns     :
  157:  **         ---             - Error code, possible codes:
  158:  **                           ERR_OK - OK
  159:  **                           ERR_SPEED - This device does not work in
  160:  **                           the active speed mode
  161:  ** ===================================================================
  162:  */
  163:  byte TIMER_Enable(void)
  164:  {

Function: TIMER_Enable
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  165:    if (!EnUser) {                       /* Is the device disabled by user? */
  0000 c60000           LDA   EnUser
  0003 2607             BNE   LC ;abs = 000c
  166:      EnUser = TRUE;                     /* If yes then set the flag "device enabled" */
  0005 a601             LDA   #1
  0007 c70000           STA   EnUser
  167:      HWEnDi();                          /* Enable the device */
  000a ad00             BSR   HWEnDi
  000c          LC:     
  168:    }
  169:    return ERR_OK;                       /* OK */
  000c 4f               CLRA  
  170:  }
  000d 81               RTS   
  171:  
  172:  /*
  173:  ** ===================================================================
  174:  **     Method      :  TIMER_Disable (bean TimerInt)
  175:  **
  176:  **     Description :
  177:  **         Disable the bean - it stops the timer. No events will be
  178:  **         generated.
  179:  **     Parameters  : None
  180:  **     Returns     :
  181:  **         ---             - Error code, possible codes:
  182:  **                           ERR_OK - OK
  183:  **                           ERR_SPEED - This device does not work in
  184:  **                           the active speed mode
  185:  ** ===================================================================
  186:  */
  187:  byte TIMER_Disable(void)
  188:  {

Function: TIMER_Disable
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  189:    if (EnUser) {                        /* Is the device enabled by user? */
  0000 c60000           LDA   EnUser
  0003 2706             BEQ   LB ;abs = 000b
  190:      EnUser = FALSE;                    /* If yes then set the flag "device disabled" */
  0005 4f               CLRA  
  0006 c70000           STA   EnUser
  191:      HWEnDi();                          /* Disable the device */
  0009 ad00             BSR   HWEnDi
  000b          LB:     
  192:    }
  193:    return ERR_OK;                       /* OK */
  000b 4f               CLRA  
  194:  }
  000c 81               RTS   
  195:  
  196:  /*
  197:  ** ===================================================================
  198:  **     Method      :  TIMER_Init (bean TimerInt)
  199:  **
  200:  **     Description :
  201:  **         This method is internal. It is used by Processor Expert
  202:  **         only.
  203:  ** ===================================================================
  204:  */
  205:  void TIMER_Init(void)
  206:  {

Function: TIMER_Init
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  207:    T2SC = 48;                           /* Set up (output) compare mode */
  0000 6e3000           MOV   #48,_T2SC
  208:    T2SC1 = 80;
  0003 6e5000           MOV   #80,_T2SC1
  209:    EnUser = FALSE;                      /* Disable device */
  0006 4f               CLRA  
  0007 c70000           STA   EnUser
  210:    SetCV(4915);                         /* Store appropriate value to the compare register according to the selected high speed CPU mode */
  000a a633             LDA   #51
  000c ae13             LDX   #19
  000e ad00             BSR   SetCV
  211:    SetPV(0);                            /* Set prescaler register according to the selected high speed CPU mode */
  0010 4f               CLRA  
  0011 ad00             BSR   SetPV
  212:    HWEnDi();                            /* Enable/disable device according to status flags */
  0013 2000             BRA   HWEnDi
  213:  }
  214:  
  215:  /*
  216:  ** ===================================================================
  217:  **     Method      :  TIMER_Interrupt (bean TimerInt)
  218:  **
  219:  **     Description :
  220:  **         This method is internal. It is used by Processor Expert
  221:  **         only.
  222:  ** ===================================================================
  223:  */
  224:  __interrupt void TIMER_Interrupt(void)
  225:  {

Function: TIMER_Interrupt
Source  : Z:\vph1\Calle\Code\TIMER.C
Options : -Cc -Env"GENPATH=Z:\vph1\Calle;Z:\vph1\Calle\bin;Z:\vph1\Calle\cmd;*Z:\vph1\Calle\Code;Z:\vph1\Calle\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\Calle\bin -EnvTEXTPATH=Z:\vph1\Calle\bin -Lasm=%n.lst -ObjN=Z:\vph1\Calle\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\TIMER.C.o -WmsgSd1106 -WmsgSd2705 -WmsgSd5919

  0000 8b               PSHH  
  226:    T2SC1_CHxF = 0;                      /* Reset interrupt request flag */
  0001 1f00             BCLR  7,_T2SC1
  227:    TIMER_OnInterrupt();                 /* Invoke user event */
  0003 cd0000           JSR   TIMER_OnInterrupt
  228:  }
  0006 8a               PULH  
  0007 80               RTI   
  229:  
  230:  
  231:  /* END TIMER. */
  232:  
  233:  /*
  234:  ** ###################################################################
  235:  **
  236:  **     This file was created by UNIS Processor Expert 02.89 for 
  237:  **     the Motorola HC08 series of microcontrollers.
  238:  **
  239:  ** ###################################################################
  240:  */
  241:  
