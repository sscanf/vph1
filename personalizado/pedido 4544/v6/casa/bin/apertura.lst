ANSI-C/cC++ Compiler for HC08 V-5.0.17, Apr 22 2003

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : APERTURA.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : BitsIO
   13:  **
   14:  **     Version   : Bean 02.022, Driver 02.16, CPU db: 2.89.000
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler
   17:  **
   18:  **     Date/Time : 20/02/2006, 13:59
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "BitsIO" implements a multi-bit input/output.
   23:  **         It uses selected pins of one 1-bit to 8-bit port.
   24:  **
   25:  **     Settings  :
   26:  **
   27:  **         Port name                   : PTC
   28:  **
   29:  **         Bit mask of the port        : 48
   30:  **         Number of bits/pins         : 2
   31:  **         Single bit numbers          : 0 to 1
   32:  **         Values range                : 0 to 3
   33:  **
   34:  **         Initial direction           : Input (direction can be changed)
   35:  **         Safe mode                   : yes
   36:  **         Initial output value        : 0 = 000H
   37:  **         Initial pull option         : off
   38:  **
   39:  **         Port data register          : PTC       [2]
   40:  **         Port control register       : DDRC      [6]
   41:  **
   42:  **             ----------------------------------------------------
   43:  **                   Bit     |   Pin   |   Name
   44:  **             ----------------------------------------------------
   45:  **                    0      |    6    |   PTC4
   46:  **                    1      |    7    |   PTC5
   47:  **             ----------------------------------------------------
   48:  **
   49:  **         Optimization for            : speed
   50:  **
   51:  **     Contents  :
   52:  **
   53:  **         GetDir - bool APERTURA_GetDir(void);
   54:  **         SetDir - void APERTURA_SetDir(bool Dir);
   55:  **         GetVal - byte APERTURA_GetVal(void);
   56:  **         PutVal - void APERTURA_PutVal(byte Val);
   57:  **         GetBit - bool APERTURA_GetBit(byte Bit);
   58:  **         PutBit - void APERTURA_PutBit(byte Bit,bool Val);
   59:  **         SetBit - void APERTURA_SetBit(byte Bit);
   60:  **         ClrBit - void APERTURA_ClrBit(byte Bit);
   61:  **         NegBit - void APERTURA_NegBit(byte Bit);
   62:  **
   63:  **
   64:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   65:  **
   66:  **     UNIS, spol. s r.o.
   67:  **     Jundrovska 33
   68:  **     624 00 Brno
   69:  **     Czech Republic
   70:  **
   71:  **     http      : www.processorexpert.com
   72:  **     mail      : info@processorexpert.com
   73:  **
   74:  ** ###################################################################
   75:  */
   76:  
   77:  #include "APERTURA.h"
   78:  
   79:  /*Include shared modules, which are used for whole project*/
   80:  #include "PE_Types.h"
   81:  #include "PE_Error.h"
   82:  #include "PE_Const.h"
   83:  #include "IO_Map.h"
   84:  #include "Cpu.h"
   85:  
   86:  const byte APERTURA_Table[8]={ 1, 2, 4, 8, 16, 32, 64, 128 }; /* Table of mask constants */
   87:  /*
   88:  ** ===================================================================
   89:  **     Method      :  APERTURA_GetMsk (bean BitsIO)
   90:  **
   91:  **     Description :
   92:  **         This method is internal. It is used by Processor Expert
   93:  **         only.
   94:  ** ===================================================================
   95:  */
   96:  byte APERTURA_GetMsk(byte Value)
   97:  {

Function: APERTURA_GetMsk
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

   98:    return((Value<2)?APERTURA_Table[Value+4]:0); /* Return appropriate bit mask */
  0000 a102             CMP   #2
  0002 2502             BCS   L6 ;abs = 0006
  0004 4f               CLRA  
  0005 81               RTS   
  0006          L6:     
  0006 8c               CLRH  
  0007 97               TAX   
  0008 d60004           LDA   @APERTURA_Table:4,X
   99:  }
  000b 81               RTS   
  100:  
  101:  /*
  102:  ** ===================================================================
  103:  **     Method      :  APERTURA_GetVal (bean BitsIO)
  104:  **
  105:  **     Description :
  106:  **         This method returns an input value.
  107:  **           a) direction = Input  : reads the input value from the
  108:  **                                   pins and returns it
  109:  **           b) direction = Output : returns the last written value
  110:  **     Parameters  : None
  111:  **     Returns     :
  112:  **         ---        - Input value (0 to 3)
  113:  ** ===================================================================
  114:  */
  115:  /*
  116:  byte APERTURA_GetVal(void)
  117:  
  118:  **  This method is implemented as a macro. See APERTURA.h file.  **
  119:  */
  120:  
  121:  /*
  122:  ** ===================================================================
  123:  **     Method      :  APERTURA_PutVal (bean BitsIO)
  124:  **
  125:  **     Description :
  126:  **         This method writes the new output value.
  127:  **           a) direction = Input  : sets the new output value;
  128:  **                                   this operation will be shown on
  129:  **                                   output after the direction has
  130:  **                                   been switched to output
  131:  **                                   (SetDir(TRUE);)
  132:  **           b) direction = Output : directly writes the value to the
  133:  **                                   appropriate pins
  134:  **     Parameters  :
  135:  **         NAME       - DESCRIPTION
  136:  **         Value      - Output value (0 to 3)
  137:  **     Returns     : Nothing
  138:  ** ===================================================================
  139:  */
  140:  void APERTURA_PutVal(byte Value)
  141:  {

Function: APERTURA_PutVal
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  142:    byte Temp;                           /* Temporary variable */
  143:  
  144:    Temp = (Value<<4) & 48;              /* Prepare value for output */
  0000 62               NSA   
  0001 a430             AND   #48
  145:    Shadow_PTC = Shadow_PTC & ~48 | Temp; /* Set-up bits in shadow variable */
  0003 87               PSHA  
  0004 c60000           LDA   Shadow_PTC
  0007 a4cf             AND   #-49
  0009 95               TSX   
  000a fa               ORA   ,X
  000b c70000           STA   Shadow_PTC
  146:    PTC = PTC & ~48 | Temp;              /* Set-up bits on port */
  000e b600             LDA   _PTC
  0010 a4cf             AND   #-49
  0012 fa               ORA   ,X
  0013 b700             STA   _PTC
  0015 8a               PULH  
  147:  }
  0016 81               RTS   
  148:  
  149:  /*
  150:  ** ===================================================================
  151:  **     Method      :  APERTURA_GetBit (bean BitsIO)
  152:  **
  153:  **     Description :
  154:  **         This method returns the specified bit of the input value.
  155:  **           a) direction = Input  : reads the input value from pins
  156:  **                                   and returns the specified bit
  157:  **           b) direction = Output : returns the specified bit
  158:  **                                   of the last written value
  159:  **     Parameters  :
  160:  **         NAME       - DESCRIPTION
  161:  **         BitNum     - Number of the bit to read (0 to 1)
  162:  **     Returns     :
  163:  **         ---        - Value of the specified bit (FALSE or TRUE)
  164:  **                      FALSE = "0" or "Low", TRUE = "1" or "High"
  165:  ** ===================================================================
  166:  */
  167:  bool APERTURA_GetBit(byte BitNum)
  168:  {

Function: APERTURA_GetBit
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  169:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0001 ad00             BSR   APERTURA_GetMsk
  0003 95               TSX   
  0004 f7               STA   ,X
  170:  
  171:    return((Mask)?(PTC & Mask) == Mask:0); /* Return input value */
  0005 2603             BNE   LA ;abs = 000a
  0007 4f               CLRA  
  172:  }
  0008 8a               PULH  
  0009 81               RTS   
  000a          LA:     
  000a b600             LDA   _PTC
  000c f4               AND   ,X
  000d f1               CMP   ,X
  000e 2703             BEQ   L13 ;abs = 0013
  0010 4f               CLRA  
  0011 8a               PULH  
  0012 81               RTS   
  0013          L13:    
  0013 a601             LDA   #1
  0015 8a               PULH  
  0016 81               RTS   
  173:  
  174:  /*
  175:  ** ===================================================================
  176:  **     Method      :  APERTURA_PutBit (bean BitsIO)
  177:  **
  178:  **     Description :
  179:  **         This method writes the new value to the specified bit
  180:  **         of the output value.
  181:  **           a) direction = Input  : sets the value of the specified
  182:  **                                   bit; this operation will be
  183:  **                                   shown on output after the
  184:  **                                   direction has been switched to
  185:  **                                   output (SetDir(TRUE);)
  186:  **           b) direction = Output : directly writes the value of the
  187:  **                                   bit to the appropriate pin
  188:  **     Parameters  :
  189:  **         NAME       - DESCRIPTION
  190:  **         BitNum     - Number of the bit (0 to 1)
  191:  **         Value      - New value of the bit (FALSE or TRUE)
  192:  **                      FALSE = "0" or "Low", TRUE = "1" or "High"
  193:  **     Returns     : Nothing
  194:  ** ===================================================================
  195:  */
  196:  void APERTURA_PutBit(byte BitNum, byte Value)
  197:  {

Function: APERTURA_PutBit
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 89               PSHX  
  0001 8b               PSHH  
  198:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0002 ad00             BSR   APERTURA_GetMsk
  0004 95               TSX   
  0005 f7               STA   ,X
  199:  
  200:    if (Mask)  {                         /* Is bit mask correct? */
  0006 271c             BEQ   L24 ;abs = 0024
  201:      if (Value) {                       /* Is it one to be written? */
  0008 6d01             TST   1,X
  000a 270c             BEQ   L18 ;abs = 0018
  202:        Shadow_PTC |= Mask;              /* Set appropriate bit in shadow variable */
  000c c60000           LDA   Shadow_PTC
  000f fa               ORA   ,X
  0010 c70000           STA   Shadow_PTC
  203:        PTC |= Mask;                     /* Set appropriate bit on port */
  0013 b600             LDA   _PTC
  0015 fa               ORA   ,X
  204:      }
  0016 200a             BRA   L22 ;abs = 0022
  0018          L18:    
  205:      else {                             /* Is it zero to be written? */
  206:        Shadow_PTC &= ~Mask;             /* Clear appropriate bit in shadow variable */
  0018 43               COMA  
  0019 87               PSHA  
  001a 450000           LDHX  @Shadow_PTC
  001d f4               AND   ,X
  001e f7               STA   ,X
  207:        PTC &= ~Mask;                    /* Clear appropriate bit on port */
  001f 86               PULA  
  0020 b400             AND   _PTC
  0022          L22:    
  0022 b700             STA   _PTC
  0024          L24:    
  208:      }
  209:    }
  210:  }
  0024 a702             AIS   #2
  0026 81               RTS   
  211:  
  212:  /*
  213:  ** ===================================================================
  214:  **     Method      :  APERTURA_SetBit (bean BitsIO)
  215:  **
  216:  **     Description :
  217:  **         This method sets (sets to one) the specified bit of the
  218:  **         output value.
  219:  **         [ It is the same as "PutBit(Bit,TRUE);" ]
  220:  **           a) direction = Input  : sets the specified bit to "1";
  221:  **                                   this operation will be shown on
  222:  **                                   output after the direction has
  223:  **                                   been switched to output
  224:  **                                   (SetDir(TRUE);)
  225:  **           b) direction = Output : directly writes "1" to the
  226:  **                                   appropriate pin
  227:  **     Parameters  :
  228:  **         NAME       - DESCRIPTION
  229:  **         BitNum     - Number of the bit to set (0 to 1)
  230:  **     Returns     : Nothing
  231:  ** ===================================================================
  232:  */
  233:  void APERTURA_SetBit(byte BitNum)
  234:  {

Function: APERTURA_SetBit
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  235:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0001 ad00             BSR   APERTURA_GetMsk
  0003 95               TSX   
  0004 f7               STA   ,X
  236:  
  237:    if (Mask) {                          /* Is bit mask correct? */
  0005 270c             BEQ   L13 ;abs = 0013
  238:      Shadow_PTC |= Mask;                /* Set appropriate bit in shadow variable */
  0007 c60000           LDA   Shadow_PTC
  000a fa               ORA   ,X
  000b c70000           STA   Shadow_PTC
  239:      PTC |= Mask;                       /* Set appropriate bit on port */
  000e b600             LDA   _PTC
  0010 fa               ORA   ,X
  0011 b700             STA   _PTC
  0013          L13:    
  240:    }
  241:  }
  0013 8a               PULH  
  0014 81               RTS   
  242:  
  243:  /*
  244:  ** ===================================================================
  245:  **     Method      :  APERTURA_ClrBit (bean BitsIO)
  246:  **
  247:  **     Description :
  248:  **         This method clears (sets to zero) the specified bit
  249:  **         of the output value.
  250:  **         [ It is the same as "PutBit(Bit,FALSE);" ]
  251:  **           a) direction = Input  : sets the specified bit to "0";
  252:  **                                   this operation will be shown on
  253:  **                                   output after the direction has
  254:  **                                   beenswitched to output
  255:  **                                   (SetDir(TRUE);)
  256:  **           b) direction = Output : directly writes "0" to the
  257:  **                                   appropriate pin
  258:  **     Parameters  :
  259:  **         NAME       - DESCRIPTION
  260:  **         BitNum     - Number of the bit to clear (0 to 1)
  261:  **     Returns     : Nothing
  262:  ** ===================================================================
  263:  */
  264:  void APERTURA_ClrBit(byte BitNum)
  265:  {

Function: APERTURA_ClrBit
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  266:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0001 ad00             BSR   APERTURA_GetMsk
  0003 95               TSX   
  0004 f7               STA   ,X
  267:  
  268:    if (Mask) {                          /* Is bit mask correct? */
  0005 270c             BEQ   L13 ;abs = 0013
  269:      Shadow_PTC &= ~Mask;               /* Clear appropriate bit in shadow variable */
  0007 43               COMA  
  0008 87               PSHA  
  0009 450000           LDHX  @Shadow_PTC
  000c f4               AND   ,X
  000d f7               STA   ,X
  270:      PTC &= ~Mask;                      /* Clear appropriate bit on port */
  000e 86               PULA  
  000f b400             AND   _PTC
  0011 b700             STA   _PTC
  0013          L13:    
  271:    }
  272:  }
  0013 8a               PULH  
  0014 81               RTS   
  273:  
  274:  /*
  275:  ** ===================================================================
  276:  **     Method      :  APERTURA_NegBit (bean BitsIO)
  277:  **
  278:  **     Description :
  279:  **         This method negates (invertes) the specified bit of the
  280:  **         output value.
  281:  **           a) direction = Input  : invertes the specified bit;
  282:  **                                   this operation will be shown on
  283:  **                                   output after the direction has
  284:  **                                   been switched to output
  285:  **                                   (SetDir(TRUE);)
  286:  **           b) direction = Output : directly invertes the value
  287:  **                                   of the appropriate pin
  288:  **     Parameters  :
  289:  **         NAME       - DESCRIPTION
  290:  **         BitNum     - Number of the bit to invert (0 to 31)
  291:  **     Returns     : Nothing
  292:  ** ===================================================================
  293:  */
  294:  void APERTURA_NegBit(byte BitNum)
  295:  {

Function: APERTURA_NegBit
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  296:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0001 cd0000           JSR   APERTURA_GetMsk
  0004 95               TSX   
  0005 f7               STA   ,X
  297:  
  298:    if (Mask) {                          /* Is bit mask correct? */
  0006 270c             BEQ   L14 ;abs = 0014
  299:      Shadow_PTC ^= Mask;                /* Negate appropriate bit in shadow variable */
  0008 c60000           LDA   Shadow_PTC
  000b f8               EOR   ,X
  000c c70000           STA   Shadow_PTC
  300:      PTC ^= Mask;                       /* Negate appropriate bit on port */
  000f b600             LDA   _PTC
  0011 f8               EOR   ,X
  0012 b700             STA   _PTC
  0014          L14:    
  301:    }
  302:  }
  0014 8a               PULH  
  0015 81               RTS   
  303:  
  304:  /*
  305:  ** ===================================================================
  306:  **     Method      :  APERTURA_SetDir (bean BitsIO)
  307:  **
  308:  **     Description :
  309:  **         This method sets direction of the bean.
  310:  **     Parameters  :
  311:  **         NAME       - DESCRIPTION
  312:  **         DirOutput  - Direction to set (FALSE or TRUE)
  313:  **                      FALSE = Input, TRUE = Output
  314:  **     Returns     : Nothing
  315:  ** ===================================================================
  316:  */
  317:  void APERTURA_SetDir(byte DirOutput)
  318:  {

Function: APERTURA_SetDir
Source  : Z:\vph1\maestro\v6\casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\maestro\v6\casa;Z:\vph1\maestro\v6\casa\bin;Z:\vph1\maestro\v6\casa\cmd;*Z:\vph1\maestro\v6\casa\Code;Z:\vph1\maestro\v6\casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\maestro\v6\Comun;*Z:\vph1\maestro\v6;Z:\vph1\maestro\v6\casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\maestro\v6\casa\bin -EnvTEXTPATH=Z:\vph1\maestro\v6\casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\maestro\v6\casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 87               PSHA  
  319:    if (DirOutput) {                     /* Is given direction output? */
  0001 95               TSX   
  0002 7d               TST   ,X
  0003 2717             BEQ   L1C ;abs = 001c
  320:      PTC = (PTC & ~48)|(Shadow_PTC & 48); /* Restore correct value of output from shadow variable */
  0005 b600             LDA   _PTC
  0007 a4cf             AND   #-49
  0009 87               PSHA  
  000a c60000           LDA   Shadow_PTC
  000d a430             AND   #48
  000f 95               TSX   
  0010 fa               ORA   ,X
  0011 b700             STA   _PTC
  321:      DDRC |= 48;                        /* Set direction to output */
  0013 b600             LDA   _DDRC
  0015 aa30             ORA   #48
  0017 b700             STA   _DDRC
  322:    }
  0019 8a               PULH  
  323:    else                                 /* Is direction input? */
  324:      DDRC &= ~48;                       /* Set direction to input */
  325:  }
  001a 8a               PULH  
  001b 81               RTS   
  001c          L1C:    
  001c b600             LDA   _DDRC
  001e a4cf             AND   #-49
  0020 b700             STA   _DDRC
  0022 8a               PULH  
  0023 81               RTS   
  326:  
  327:  /*
  328:  ** ===================================================================
  329:  **     Method      :  APERTURA_GetDir (bean BitsIO)
  330:  **
  331:  **     Description :
  332:  **         This method returns direction of the bean.
  333:  **     Parameters  : None
  334:  **     Returns     :
  335:  **         ---        - Direction of the bean (FALSE or TRUE)
  336:  **                      FALSE = Input, TRUE = Output
  337:  ** ===================================================================
  338:  */
  339:  /*
  340:  bool APERTURA_GetDir(void)
  341:  
  342:  **  This method is implemented as a macro. See APERTURA.h file.  **
  343:  */
  344:  
  345:  /*
  346:  ** ###################################################################
  347:  **
  348:  **     This file was created by UNIS Processor Expert 03.23 for 
  349:  **     the Motorola HC08 series of microcontrollers.
  350:  **
  351:  ** ###################################################################
  352:  */
  353:  
