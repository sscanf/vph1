ANSI-C/cC++ Compiler for HC08 V-5.0.15, Apr 11 2002

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : Cpu.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : MC68HC908GP32_44
   13:  **
   14:  **     Version   : Bean 01.062, Driver 01.06, CPU db: 2.87.041
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler V-5.0.13
   17:  **
   18:  **     Date/Time : 7/4/viernes, 14:31
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "MC68HC908GP32_44" implements properties, methods,
   23:  **         and events of the CPU.
   24:  **
   25:  **     Settings  :
   26:  **
   27:  **         Clock setting
   28:  **             External clock      : 0.032768 MHz
   29:  **             CPU mode selection  : User mode
   30:  **             Initialization interrupt priority : 1
   31:  **             LVI module          : no
   32:  **
   33:  **         Speed modes
   34:  **             High speed clock    : Main clock frequency / 1
   35:  **             Internal bus clock  : 4.9152 MHz
   36:  **             Low speed mode      : Disabled
   37:  **             Slow speed mode     : Disabled
   38:  **
   39:  **     Contents  :
   40:  **
   41:  **         GetSpeedMode - byte Cpu_GetSpeedMode(void);
   42:  **         EnableInt    - void Cpu_EnableInt(void);
   43:  **         DisableInt   - void Cpu_DisableInt(void);
   44:  **
   45:  **
   46:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   47:  **
   48:  **     UNIS, spol. s r.o.
   49:  **     Jundrovska 33
   50:  **     624 00 Brno
   51:  **     Czech Republic
   52:  **
   53:  **     http      : www.processorexpert.com
   54:  **     mail      : info@processorexpert.com
   55:  **
   56:  ** ###################################################################
   57:  */
   58:  
   59:  /* MODULE Cpu. */
   60:  #include "Terminal.h"
   61:  #include "IRQ.h"
   62:  #include "TIMER.h"
   63:  #include "PE_Types.h"
   64:  #include "PE_Error.h"
   65:  #include "PE_Const.h"
   66:  #include "IO_Map.h"
   67:  #include "Events.h"
   68:  #include "Cpu.h"
   69:  
   70:    #define CGM_DELAY  255
   71:  
   72:  
   73:  /* Global variables */
   74:  byte CCR_reg;                          /* Current CCR register */
   75:  byte CpuMode = HIGH_SPEED;             /* Current speed mode */
   76:  
   77:  
   78:  /*
   79:  ** ===================================================================
   80:  **     Method      :  Cpu_Interrupt (bean MC68HC908GP32_44)
   81:  **
   82:  **     Description :
   83:  **         This method is internal. It is used by Processor Expert
   84:  **         only.
   85:  ** ===================================================================
   86:  */
   87:  __interrupt void Cpu_Interrupt(void)
   88:  {

Function: Cpu_Interrupt
Source  : Z:\vph1\test\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\test;Z:\vph1\test\bin;Z:\vph1\test\cmd;*Z:\vph1\test\Code;Z:\vph1\test\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\test\bin -EnvTEXTPATH=Z:\vph1\test\bin -Lasm=%n.lst -ObjN=Z:\vph1\test\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o -WmsgSd1106

   89:  }
  0000 80               RTI   
   90:  
   91:  /*
   92:  ** ===================================================================
   93:  **     Method      :  Cpu_SWIInterrupt (bean MC68HC908GP32_44)
   94:  **
   95:  **     Description :
   96:  **         This method is internal. It is used by Processor Expert
   97:  **         only.
   98:  ** ===================================================================
   99:  */
  100:  __interrupt void Cpu_SWIInterrupt(void)
  101:  {

Function: Cpu_SWIInterrupt
Source  : Z:\vph1\test\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\test;Z:\vph1\test\bin;Z:\vph1\test\cmd;*Z:\vph1\test\Code;Z:\vph1\test\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\test\bin -EnvTEXTPATH=Z:\vph1\test\bin -Lasm=%n.lst -ObjN=Z:\vph1\test\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o -WmsgSd1106

  0000 8b               PSHH  
  102:    Cpu_OnSwINT();                       /* Invoke user event */
  0001 cd0000           JSR   Cpu_OnSwINT
  103:  }
  0004 8a               PULH  
  0005 80               RTI   
  104:  
  105:  /*
  106:  ** ===================================================================
  107:  **     Method      :  Cpu_DisableInt (bean MC68HC908GP32_44)
  108:  **
  109:  **     Description :
  110:  **         Disable maskable interrupts
  111:  **     Parameters  : None
  112:  **     Returns     : Nothing
  113:  ** ===================================================================
  114:  */
  115:  /*
  116:  void Cpu_DisableInt(void)
  117:  
  118:  **      This method is implemented as macro in the header module. **
  119:  */
  120:  
  121:  /*
  122:  ** ===================================================================
  123:  **     Method      :  Cpu_EnableInt (bean MC68HC908GP32_44)
  124:  **
  125:  **     Description :
  126:  **         Enable maskable interrupts
  127:  **     Parameters  : None
  128:  **     Returns     : Nothing
  129:  ** ===================================================================
  130:  */
  131:  /*
  132:  void Cpu_EnableInt(void)
  133:  
  134:  **      This method is implemented as macro in the header module. **
  135:  */
  136:  
  137:  /*
  138:  ** ===================================================================
  139:  **     Method      :  Cpu_GetSpeedMode (bean MC68HC908GP32_44)
  140:  **
  141:  **     Description :
  142:  **         Get current speed mode
  143:  **     Parameters  : None
  144:  **     Returns     :
  145:  **         ---             - Speed mode (HIGH_SPEED, LOW_SPEED,
  146:  **                           SLOW_SPEED)
  147:  ** ===================================================================
  148:  */
  149:  byte Cpu_GetSpeedMode(void)
  150:  {

Function: Cpu_GetSpeedMode
Source  : Z:\vph1\test\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\test;Z:\vph1\test\bin;Z:\vph1\test\cmd;*Z:\vph1\test\Code;Z:\vph1\test\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\test\bin -EnvTEXTPATH=Z:\vph1\test\bin -Lasm=%n.lst -ObjN=Z:\vph1\test\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o -WmsgSd1106

  151:    return CpuMode;                      /* Result the actual cpu mode */
  0000 c60000           LDA   CpuMode
  152:  }
  0003 81               RTS   
  153:  
  154:  /*
  155:  ** ===================================================================
  156:  **         There is beginning of initialization code for CPU 
  157:  **         and embedded beans.
  158:  ** ===================================================================
  159:  */
  160:  void __low_level_init(void)
  161:  {

Function: __low_level_init
Source  : Z:\vph1\test\Code\Cpu.C
Options : -Cc -Env"GENPATH=Z:\vph1\test;Z:\vph1\test\bin;Z:\vph1\test\cmd;*Z:\vph1\test\Code;Z:\vph1\test\prm;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\Comun;D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior HC08_V2.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\test\bin -EnvTEXTPATH=Z:\vph1\test\bin -Lasm=%n.lst -ObjN=Z:\vph1\test\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\Cpu.C.o -WmsgSd1106

  162:    /* ### MC68HC908GP32_44 "Cpu" init code ... */
  163:    CONFIG1 = 17;                        /* Set the CONFIG1 register */
  0000 6e1100           MOV   #17,_CONFIG1
  164:    CONFIG2 = 1;                         /* Set the CONFIG2 register */
  0003 6e0100           MOV   #1,_CONFIG2
  165:    PCTL_BCS = 0;                        /* Select clock source from XTAL */
  0006 1900             BCLR  4,_PCTL
  166:    PCTL_PLLON = 0;                      /* Disable the PLL */
  0008 1b00             BCLR  5,_PCTL
  167:    PMS = 600;                           /* Set the multiplier */
  000a 450258           LDHX  #600
  000d 3500             STHX  _PMS
  168:    PMRS = 128;                          /* Set the range select */
  000f 6e8000           MOV   #-128,_PMRS
  169:    PCTL = 0;
  0012 3f00             CLR   _PCTL
  170:    PCTL_VPR = 2;
  0014 b600             LDA   _PCTL
  0016 a4fc             AND   #-4
  0018 aa02             ORA   #2
  001a b700             STA   _PCTL
  171:    PBWC = 128;                          /* Select the operating modes */
  001c 6e8000           MOV   #-128,_PBWC
  172:    PCTL_PLLON = 1;                      /* Enable the PLL */
  001f 1a00             BSET  5,_PCTL
  0021          L21:    
  173:    while(!PBWC_LOCK);                   /* Wait */
  0021 0d00fd           BRCLR 6,_PBWC,L21 ;abs = 0021
  174:    PCTL_BCS = 1;                        /* Select clock source from PLL */
  0024 1800             BSET  4,_PCTL
  175:    __asm("nop");
  0026 9d               NOP   
  176:    __asm("nop");
  0027 9d               NOP   
  177:    /* ### Asynchro serial "Terminal" init code ... */
  178:    DDRE &= ~2;
  0028 1300             BCLR  1,_DDRE
  179:    PTE |= 1;
  002a 1000             BSET  0,_PTE
  180:    DDRE |= 1;
  002c 1000             BSET  0,_DDRE
  181:    Terminal_Init();
  002e cd0000           JSR   Terminal_Init
  182:    /* ### External interrupt "IRQ" init code ... */
  183:    INTSCR_MODE = 1;
  0031 1000             BSET  0,_INTSCR
  184:    INTSCR_IMASK = 1;
  0033 1200             BSET  1,_INTSCR
  185:    INTSCR_ACK = 1;
  0035 1400             BSET  2,_INTSCR
  186:    INTSCR_IMASK = 0;
  0037 1300             BCLR  1,_INTSCR
  187:    /* ### TimerInt "TIMER" init code ... */
  188:    TIMER_Init();
  0039 cd0000           JSR   TIMER_Init
  189:    __EI();                              /* Enable interrupts */
  003c 9a               CLI   
  190:  }
  003d 81               RTS   
  191:  
  192:  /* END Cpu. */
  193:  
  194:  /*
  195:  ** ###################################################################
  196:  **
  197:  **     This file was created by UNIS Processor Expert 02.89 for 
  198:  **     the Motorola HC08 series of microcontrollers.
  199:  **
  200:  ** ###################################################################
  201:  */
  202:  
