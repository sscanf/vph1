ANSI-C/cC++ Compiler for HC08 V-5.0.17, Apr 22 2003

    1:  /*
    2:  ** ###################################################################
    3:  **
    4:  **     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
    5:  **
    6:  **     Filename  : APERTURA.C
    7:  **
    8:  **     Project   : vph1
    9:  ** 
   10:  **     Processor : MC68HC908GP32CFB
   11:  **
   12:  **     Beantype  : BitsIO
   13:  **
   14:  **     Version   : Bean 02.022, Driver 02.16, CPU db: 2.89.000
   15:  **
   16:  **     Compiler  : Metrowerks HC08 C Compiler
   17:  **
   18:  **     Date/Time : 4/30/viernes, 9:41
   19:  **
   20:  **     Abstract  :
   21:  **
   22:  **         This bean "BitsIO" implements a multi-bit input/output.
   23:  **         It uses selected pins of one 1-bit to 8-bit port.
   24:  **         Note: This bean is set to work in Input direction only.
   25:  **
   26:  **     Settings  :
   27:  **
   28:  **         Port name                   : PTC
   29:  **
   30:  **         Bit mask of the port        : 48
   31:  **         Number of bits/pins         : 2
   32:  **         Single bit numbers          : 0 to 1
   33:  **         Values range                : 0 to 3
   34:  **
   35:  **         Initial direction           : Input (direction cannot be changed)
   36:  **         Initial output value        : 0 = 000H
   37:  **         Initial pull option         : off
   38:  **
   39:  **         Port data register          : PTC       [2]
   40:  **         Port control register       : DDRC      [6]
   41:  **
   42:  **             ----------------------------------------------------
   43:  **                   Bit     |   Pin   |   Name
   44:  **             ----------------------------------------------------
   45:  **                    0      |    6    |   PTC4
   46:  **                    1      |    7    |   PTC5
   47:  **             ----------------------------------------------------
   48:  **
   49:  **         Optimization for            : speed
   50:  **
   51:  **     Contents  :
   52:  **
   53:  **         GetDir - bool APERTURA_GetDir(void);
   54:  **         GetVal - byte APERTURA_GetVal(void);
   55:  **         GetBit - bool APERTURA_GetBit(byte Bit);
   56:  **
   57:  **
   58:  **     (c) Copyright UNIS, spol. s r.o. 1997-2002
   59:  **
   60:  **     UNIS, spol. s r.o.
   61:  **     Jundrovska 33
   62:  **     624 00 Brno
   63:  **     Czech Republic
   64:  **
   65:  **     http      : www.processorexpert.com
   66:  **     mail      : info@processorexpert.com
   67:  **
   68:  ** ###################################################################
   69:  */
   70:  
   71:  #include "APERTURA.h"
   72:  
   73:  /*Include shared modules, which are used for whole project*/
   74:  #include "PE_Types.h"
   75:  #include "PE_Error.h"
   76:  #include "PE_Const.h"
   77:  #include "IO_Map.h"
   78:  #include "Cpu.h"
   79:  
   80:  const byte APERTURA_Table[8]={ 1, 2, 4, 8, 16, 32, 64, 128 }; /* Table of mask constants */
   81:  /*
   82:  ** ===================================================================
   83:  **     Method      :  APERTURA_GetMsk (bean BitsIO)
   84:  **
   85:  **     Description :
   86:  **         This method is internal. It is used by Processor Expert
   87:  **         only.
   88:  ** ===================================================================
   89:  */
   90:  byte APERTURA_GetMsk(byte Value)
   91:  {

Function: APERTURA_GetMsk
Source  : Z:\vph1\2puertas\Casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\2puertas\Casa;Z:\vph1\2puertas\Casa\bin;Z:\vph1\2puertas\Casa\cmd;*Z:\vph1\2puertas\Casa\Code;Z:\vph1\2puertas\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\2puertas\Comun;*Z:\vph1\2puertas;Z:\vph1\2puertas\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\2puertas\Casa\bin -EnvTEXTPATH=Z:\vph1\2puertas\Casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\2puertas\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

   92:    return((Value<2)?APERTURA_Table[Value+4]:0); /* Return appropriate bit mask */
  0000 a102             CMP   #2
  0002 2502             BCS   L6 ;abs = 0006
  0004 4f               CLRA  
  0005 81               RTS   
  0006          L6:     
  0006 8c               CLRH  
  0007 97               TAX   
  0008 d60004           LDA   @APERTURA_Table:4,X
   93:  }
  000b 81               RTS   
   94:  
   95:  /*
   96:  ** ===================================================================
   97:  **     Method      :  APERTURA_GetVal (bean BitsIO)
   98:  **
   99:  **     Description :
  100:  **         This method returns an input value.
  101:  **           a) direction = Input  : reads the input value from the
  102:  **                                   pins and returns it
  103:  **           b) direction = Output : returns the last written value
  104:  **         Note: This bean is set to work in Input direction only.
  105:  **     Parameters  : None
  106:  **     Returns     :
  107:  **         ---        - Input value (0 to 3)
  108:  ** ===================================================================
  109:  */
  110:  /*
  111:  byte APERTURA_GetVal(void)
  112:  
  113:  **  This method is implemented as a macro. See APERTURA.h file.  **
  114:  */
  115:  
  116:  /*
  117:  ** ===================================================================
  118:  **     Method      :  APERTURA_GetBit (bean BitsIO)
  119:  **
  120:  **     Description :
  121:  **         This method returns the specified bit of the input value.
  122:  **           a) direction = Input  : reads the input value from pins
  123:  **                                   and returns the specified bit
  124:  **           b) direction = Output : returns the specified bit
  125:  **                                   of the last written value
  126:  **         Note: This bean is set to work in Input direction only.
  127:  **     Parameters  :
  128:  **         NAME       - DESCRIPTION
  129:  **         BitNum     - Number of the bit to read (0 to 1)
  130:  **     Returns     :
  131:  **         ---        - Value of the specified bit (FALSE or TRUE)
  132:  **                      FALSE = "0" or "Low", TRUE = "1" or "High"
  133:  ** ===================================================================
  134:  */
  135:  bool APERTURA_GetBit(byte BitNum)
  136:  {

Function: APERTURA_GetBit
Source  : Z:\vph1\2puertas\Casa\Code\APERTURA.C
Options : -Cc -Env"GENPATH=Z:\vph1\2puertas\Casa;Z:\vph1\2puertas\Casa\bin;Z:\vph1\2puertas\Casa\cmd;*Z:\vph1\2puertas\Casa\Code;Z:\vph1\2puertas\Casa\prm;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\LIB;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\src;*D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert;*Z:\vph1\2puertas\Comun;*Z:\vph1\2puertas;Z:\vph1\2puertas\Casa\doc;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\hc08c\include;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\Bin\Plugins\support\ProcessorExpert\PESL\HC08;D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -Env"LIBPATH=D:\Archivos de programa\Metrowerks\CodeWarrior CW08_V3.0\lib\HC08c\INCLUDE" -EnvOBJPATH=Z:\vph1\2puertas\Casa\bin -EnvTEXTPATH=Z:\vph1\2puertas\Casa\bin -Lasm=%n.lst -ObjN=Z:\vph1\2puertas\Casa\vph1_Data\P&E_PEDebug_FCS-ICS-ICD\ObjectCode\APERTURA.C.o -Qvtpfar -WmsgSd1106

  0000 8b               PSHH  
  137:    byte Mask=APERTURA_GetMsk(BitNum);   /* Temporary variable - bit mask */
  0001 ad00             BSR   APERTURA_GetMsk
  0003 95               TSX   
  0004 f7               STA   ,X
  138:  
  139:    return((Mask)?(PTC & Mask) == Mask:0); /* Return input value */
  0005 2603             BNE   LA ;abs = 000a
  0007 4f               CLRA  
  140:  }
  0008 8a               PULH  
  0009 81               RTS   
  000a          LA:     
  000a b600             LDA   _PTC
  000c f4               AND   ,X
  000d f1               CMP   ,X
  000e 2703             BEQ   L13 ;abs = 0013
  0010 4f               CLRA  
  0011 8a               PULH  
  0012 81               RTS   
  0013          L13:    
  0013 a601             LDA   #1
  0015 8a               PULH  
  0016 81               RTS   
  141:  
  142:  /*
  143:  ** ===================================================================
  144:  **     Method      :  APERTURA_GetDir (bean BitsIO)
  145:  **
  146:  **     Description :
  147:  **         This method returns direction of the bean.
  148:  **     Parameters  : None
  149:  **     Returns     :
  150:  **         ---        - Direction of the bean (always FALSE, Input only)
  151:  **                      FALSE = Input, TRUE = Output
  152:  ** ===================================================================
  153:  */
  154:  /*
  155:  bool APERTURA_GetDir(void)
  156:  
  157:  **  This method is implemented as a macro. See APERTURA.h file.  **
  158:  */
  159:  
  160:  /*
  161:  ** ###################################################################
  162:  **
  163:  **     This file was created by UNIS Processor Expert 03.23 for 
  164:  **     the Motorola HC08 series of microcontrollers.
  165:  **
  166:  ** ###################################################################
  167:  */
  168:  
